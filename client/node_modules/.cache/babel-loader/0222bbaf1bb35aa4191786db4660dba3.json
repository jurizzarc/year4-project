{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/jurizzarechel/Desktop/y4project/y4project-frontend/src/components/pages/Dashboard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext, useCallback } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport UserContext from \"../../context/UserContext\";\nimport { useDropzone } from \"react-dropzone\";\nimport gql from \"graphql-tag\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { Files, filesQuery } from \"./Files\";\nconst uploadFileMutation = gql`\n    mutation UploadFile($file: Upload!) {\n        uploadFile(file: $file)\n    }\n`;\nexport const Dashboard = () => {\n  _s();\n\n  const {\n    userData\n  } = useContext(UserContext);\n  const [fileName, setFileName] = useState();\n  const userId = userData.user.id;\n  console.log(userId);\n  const [uploadFile] = useMutation(uploadFileMutation, {\n    refetchQueries: [{\n      query: filesQuery\n    }]\n  });\n  const onDrop = useCallback(([file]) => {\n    uploadFile({\n      variables: {\n        file\n      }\n    });\n  }, [uploadFile]);\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive\n  } = useDropzone({\n    onDrop\n  });\n\n  const handleFileChange = async e => {\n    e.preventDefault();\n\n    try {} catch (err) {\n      err.response.data.msg;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: userData.user ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page\",\n      ...getRootProps(),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", { ...getInputProps()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }, this), isDragActive ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Drop the files here ...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Drag and drop some files here, or click to select files\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(Files, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"You are not logged in.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/login\",\n        children: \"Log In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }, this)\n  }, void 0, false);\n};\n\n_s(Dashboard, \"ZWkB/xFaMZmcYDjrsMAC3eqqjTc=\", false, function () {\n  return [useMutation, useDropzone];\n});\n\n_c = Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["/Users/jurizzarechel/Desktop/y4project/y4project-frontend/src/components/pages/Dashboard.js"],"names":["React","useState","useContext","useCallback","Link","UserContext","useDropzone","gql","useMutation","Files","filesQuery","uploadFileMutation","Dashboard","userData","fileName","setFileName","userId","user","id","console","log","uploadFile","refetchQueries","query","onDrop","file","variables","getRootProps","getInputProps","isDragActive","handleFileChange","e","preventDefault","err","response","data","msg"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,UAAzB,EAAqCC,WAArC,QAAuD,OAAvD;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,SAAQC,WAAR,QAA0B,gBAA1B;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAAQC,WAAR,QAA0B,qBAA1B;AACA,SAAQC,KAAR,EAAeC,UAAf,QAAgC,SAAhC;AAEA,MAAMC,kBAAkB,GAAGJ,GAAI;AAC/B;AACA;AACA;AACA,CAJA;AAMA,OAAO,MAAMK,SAAS,GAAG,MAAM;AAAA;;AAC3B,QAAM;AAACC,IAAAA;AAAD,MAAaX,UAAU,CAACG,WAAD,CAA7B;AACA,QAAM,CAACS,QAAD,EAAWC,WAAX,IAA0Bd,QAAQ,EAAxC;AACA,QAAMe,MAAM,GAAGH,QAAQ,CAACI,IAAT,CAAcC,EAA7B;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,MAAZ;AAEA,QAAM,CAACK,UAAD,IAAeb,WAAW,CAACG,kBAAD,EAAqB;AACjDW,IAAAA,cAAc,EAAE,CAAC;AAACC,MAAAA,KAAK,EAAEb;AAAR,KAAD;AADiC,GAArB,CAAhC;AAIA,QAAMc,MAAM,GAAGrB,WAAW,CACtB,CAAC,CAACsB,IAAD,CAAD,KAAY;AACRJ,IAAAA,UAAU,CAAC;AAACK,MAAAA,SAAS,EAAE;AAACD,QAAAA;AAAD;AAAZ,KAAD,CAAV;AACH,GAHqB,EAItB,CAACJ,UAAD,CAJsB,CAA1B;AAOA,QAAM;AAACM,IAAAA,YAAD;AAAeC,IAAAA,aAAf;AAA8BC,IAAAA;AAA9B,MAA8CvB,WAAW,CAAC;AAACkB,IAAAA;AAAD,GAAD,CAA/D;;AAEA,QAAMM,gBAAgB,GAAG,MAAOC,CAAP,IAAa;AAClCA,IAAAA,CAAC,CAACC,cAAF;;AAEA,QAAI,CAEH,CAFD,CAEE,OAAOC,GAAP,EAAY;AACVA,MAAAA,GAAG,CAACC,QAAJ,CAAaC,IAAb,CAAkBC,GAAlB;AACH;AACJ,GARD;;AAUA,sBACI;AAAA,cACKvB,QAAQ,CAACI,IAAT,gBACG;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,SAA0BU,YAAY,EAAtC;AAAA,8BACI,sBAAWC,aAAa;AAAxB;AAAA;AAAA;AAAA;AAAA,cADJ,EAEKC,YAAY,gBACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADS,gBAGT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALR,eAOI,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,cAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADH,gBAWG;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,IAAD;AAAM,QAAA,EAAE,EAAC,QAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAZR,mBADJ;AAoBH,CAjDM;;GAAMjB,S;UAMYJ,W,EAW+BF,W;;;KAjB3CM,S","sourcesContent":["import React, {useState, useContext, useCallback} from \"react\";\nimport {Link} from \"react-router-dom\";\nimport UserContext from \"../../context/UserContext\";\nimport {useDropzone} from \"react-dropzone\";\nimport gql from \"graphql-tag\";\nimport {useMutation} from \"@apollo/react-hooks\";\nimport {Files, filesQuery} from \"./Files\";\n\nconst uploadFileMutation = gql`\n    mutation UploadFile($file: Upload!) {\n        uploadFile(file: $file)\n    }\n`;\n\nexport const Dashboard = () => {\n    const {userData} = useContext(UserContext);\n    const [fileName, setFileName] = useState();\n    const userId = userData.user.id;\n    console.log(userId);\n\n    const [uploadFile] = useMutation(uploadFileMutation, {\n        refetchQueries: [{query: filesQuery}]\n    });\n\n    const onDrop = useCallback(\n        ([file]) => {\n            uploadFile({variables: {file}});\n        },\n        [uploadFile]\n    );\n\n    const {getRootProps, getInputProps, isDragActive} = useDropzone({onDrop});\n\n    const handleFileChange = async (e) => {\n        e.preventDefault();\n\n        try {\n            \n        } catch (err) {\n            err.response.data.msg;\n        }\n    };\n\n    return (\n        <>\n            {userData.user ? (\n                <div className=\"page\" {...getRootProps()}>\n                    <input {...getInputProps()} />\n                    {isDragActive ? (\n                        <p>Drop the files here ...</p>\n                    ) : (\n                        <p>Drag and drop some files here, or click to select files</p>\n                    )}\n                    <Files />\n                </div>\n            ) : (\n                <div className=\"page\">\n                    <h2>You are not logged in.</h2>\n                    <Link to=\"/login\">Log In</Link>\n                </div>\n            )}\n        </>\n    );\n}"]},"metadata":{},"sourceType":"module"}