{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/jurizzarechel/Desktop/y4project/y4project-frontend/src/components/pages/Dashboard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport UserContext from \"../../context/UserContext\";\nimport gql from \"graphql-tag\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { filesQuery } from \"./Files\";\nimport Axios from \"axios\";\nconst uploadFileMutation = gql`\n    mutation UploadFile($file: Upload!) {\n        uploadFile(file: $file)\n    }\n`;\nexport default function Dashboard() {\n  _s();\n\n  const {\n    userData\n  } = useContext(UserContext);\n  const [uploadFile] = useMutation(uploadFileMutation, {\n    refetchQueries: [{\n      query: filesQuery\n    }]\n  });\n\n  const onFileChange = e => {\n    // Get file uploaded by the user\n    const file = e.target.files[0];\n    const fileName = file.name;\n    const userId = userData.user.id;\n    const token = localStorage.getItem(\"auth-token\");\n    const newFile = {\n      fileName,\n      userId\n    };\n    const headers = {\n      'x-auth-token': token\n    }; // console.log(newFile);\n    // console.log(headers);\n    // Axios.post(\"http://localhost:4000/files/new\", newFile, { headers })\n    //      .then((res) => {\n    //          console.log(res.data);\n    //          console.log(\"File stored in the db\");\n    //      })\n    //      .catch((error) => {\n    //          console.error(error)\n    //      });\n    // console.log(\"File stored in cloud storage\");\n\n    if (!file) return; // Call mutation to upload file to the server\n\n    uploadFile({\n      variables: {\n        file\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: userData.user ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Upload File\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: onFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"You are not logged in.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/login\",\n        children: \"Log In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }, this)\n  }, void 0, false);\n}\n\n_s(Dashboard, \"fUZlECg8DMGu49UDtf+YZsiYGfM=\", false, function () {\n  return [useMutation];\n});\n\n_c = Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["/Users/jurizzarechel/Desktop/y4project/y4project-frontend/src/components/pages/Dashboard.js"],"names":["React","useContext","Link","UserContext","gql","useMutation","filesQuery","Axios","uploadFileMutation","Dashboard","userData","uploadFile","refetchQueries","query","onFileChange","e","file","target","files","fileName","name","userId","user","id","token","localStorage","getItem","newFile","headers","variables"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,UAAf,QAAgC,OAAhC;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAAQC,WAAR,QAA0B,qBAA1B;AACA,SAAQC,UAAR,QAAyB,SAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAMC,kBAAkB,GAAGJ,GAAI;AAC/B;AACA;AACA;AACA,CAJA;AAMA,eAAe,SAASK,SAAT,GAAqB;AAAA;;AAChC,QAAM;AAACC,IAAAA;AAAD,MAAaT,UAAU,CAACE,WAAD,CAA7B;AAEA,QAAM,CAACQ,UAAD,IAAeN,WAAW,CAACG,kBAAD,EAAqB;AACjDI,IAAAA,cAAc,EAAE,CAAC;AACbC,MAAAA,KAAK,EAAEP;AADM,KAAD;AADiC,GAArB,CAAhC;;AAMA,QAAMQ,YAAY,GAAIC,CAAD,IAAO;AACxB;AACA,UAAMC,IAAI,GAAGD,CAAC,CAACE,MAAF,CAASC,KAAT,CAAe,CAAf,CAAb;AACA,UAAMC,QAAQ,GAAGH,IAAI,CAACI,IAAtB;AACA,UAAMC,MAAM,GAAGX,QAAQ,CAACY,IAAT,CAAcC,EAA7B;AACA,UAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAd;AAEA,UAAMC,OAAO,GAAG;AACZR,MAAAA,QADY;AAEZE,MAAAA;AAFY,KAAhB;AAKA,UAAMO,OAAO,GAAG;AACZ,sBAAgBJ;AADJ,KAAhB,CAZwB,CAgBxB;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,QAAI,CAACR,IAAL,EAAW,OA9Ba,CA+BxB;;AACAL,IAAAA,UAAU,CAAC;AACPkB,MAAAA,SAAS,EAAE;AACPb,QAAAA;AADO;AADJ,KAAD,CAAV;AAKH,GArCD;;AAuCA,sBACI;AAAA,cACKN,QAAQ,CAACY,IAAT,gBACG;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,QAAQ,EAAER;AAA7B;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADH,gBAOG;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,IAAD;AAAM,QAAA,EAAE,EAAC,QAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AARR,mBADJ;AAgBH;;GAhEuBL,S;UAGCJ,W;;;KAHDI,S","sourcesContent":["import React, {useContext} from \"react\";\nimport {Link} from \"react-router-dom\";\nimport UserContext from \"../../context/UserContext\";\nimport gql from \"graphql-tag\";\nimport {useMutation} from \"@apollo/react-hooks\";\nimport {filesQuery} from \"./Files\";\nimport Axios from \"axios\";\n\nconst uploadFileMutation = gql`\n    mutation UploadFile($file: Upload!) {\n        uploadFile(file: $file)\n    }\n`;\n\nexport default function Dashboard() {\n    const {userData} = useContext(UserContext);\n\n    const [uploadFile] = useMutation(uploadFileMutation, {\n        refetchQueries: [{\n            query: filesQuery\n        }]\n    });\n\n    const onFileChange = (e) => {\n        // Get file uploaded by the user\n        const file = e.target.files[0];\n        const fileName = file.name;\n        const userId = userData.user.id;\n        const token = localStorage.getItem(\"auth-token\");\n\n        const newFile = {\n            fileName,\n            userId\n        };\n\n        const headers = {\n            'x-auth-token': token\n        }\n\n        // console.log(newFile);\n        // console.log(headers);\n\n        // Axios.post(\"http://localhost:4000/files/new\", newFile, { headers })\n        //      .then((res) => {\n        //          console.log(res.data);\n        //          console.log(\"File stored in the db\");\n        //      })\n        //      .catch((error) => {\n        //          console.error(error)\n        //      });\n\n        // console.log(\"File stored in cloud storage\");\n\n        if (!file) return;\n        // Call mutation to upload file to the server\n        uploadFile({\n            variables: {\n                file\n            }\n        });\n    }\n    \n    return (\n        <>\n            {userData.user ? (\n                <div className=\"page\">\n                    <h1>Upload File</h1>\n                    <input type=\"file\" onChange={onFileChange} />\n                    {/* <Files /> */}\n                </div>\n            ) : (\n                <div className=\"page\">\n                    <h2>You are not logged in.</h2>\n                    <Link to=\"/login\">Log In</Link>\n                </div>\n            )}\n        </>\n    );\n}"]},"metadata":{},"sourceType":"module"}