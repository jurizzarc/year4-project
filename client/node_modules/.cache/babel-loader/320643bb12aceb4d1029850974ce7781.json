{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/jurizzarechel/Desktop/y4project/y4project-frontend/src/components/pages/Dashboard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback } from \"react\";\nimport { useDropzone } from \"react-dropzone\";\nimport gql from \"graphql-tag\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { filesQuery } from \"./Files\";\nconst uploadFileMutation = gql`\n    mutation UploadFile($file: Upload!) {\n        uploadFile(file: $file)\n    }\n`;\nexport default function Dashboard() {\n  _s();\n\n  const [uploadFile] = useMutation(uploadFileMutation, {\n    refetchQueries: [{\n      query: filesQuery\n    }]\n  });\n  const onDrop = useCallback(([file]) => {\n    uploadFile({\n      variables: {\n        file\n      }\n    });\n  }, [uploadFile]);\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive\n  } = useDropzone({\n    onDrop\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page\",\n    children: \"Dashboard\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 12\n  }, this);\n}\n\n_s(Dashboard, \"lsZZcOnZ6kI+IiXyF4KSg6UfWxc=\", false, function () {\n  return [useMutation, useDropzone];\n});\n\n_c = Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["/Users/jurizzarechel/Desktop/y4project/y4project-frontend/src/components/pages/Dashboard.js"],"names":["React","useCallback","useDropzone","gql","useMutation","filesQuery","uploadFileMutation","Dashboard","uploadFile","refetchQueries","query","onDrop","file","variables","getRootProps","getInputProps","isDragActive"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,WAAf,QAAiC,OAAjC;AACA,SAAQC,WAAR,QAA0B,gBAA1B;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAAQC,WAAR,QAA0B,qBAA1B;AACA,SAAQC,UAAR,QAAyB,SAAzB;AAEA,MAAMC,kBAAkB,GAAGH,GAAI;AAC/B;AACA;AACA;AACA,CAJA;AAMA,eAAe,SAASI,SAAT,GAAqB;AAAA;;AAChC,QAAM,CAACC,UAAD,IAAeJ,WAAW,CAACE,kBAAD,EAAqB;AACjDG,IAAAA,cAAc,EAAE,CAAC;AAACC,MAAAA,KAAK,EAAEL;AAAR,KAAD;AADiC,GAArB,CAAhC;AAIA,QAAMM,MAAM,GAAGV,WAAW,CACtB,CAAC,CAACW,IAAD,CAAD,KAAY;AACRJ,IAAAA,UAAU,CAAC;AAACK,MAAAA,SAAS,EAAE;AAACD,QAAAA;AAAD;AAAZ,KAAD,CAAV;AACH,GAHqB,EAItB,CAACJ,UAAD,CAJsB,CAA1B;AAOA,QAAM;AAACM,IAAAA,YAAD;AAAeC,IAAAA,aAAf;AAA8BC,IAAAA;AAA9B,MAA8Cd,WAAW,CAAC;AAACS,IAAAA;AAAD,GAAD,CAA/D;AAEA,sBAAO;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACH;;GAfuBJ,S;UACCH,W,EAW+BF,W;;;KAZhCK,S","sourcesContent":["import React, {useCallback} from \"react\";\nimport {useDropzone} from \"react-dropzone\";\nimport gql from \"graphql-tag\";\nimport {useMutation} from \"@apollo/react-hooks\";\nimport {filesQuery} from \"./Files\";\n\nconst uploadFileMutation = gql`\n    mutation UploadFile($file: Upload!) {\n        uploadFile(file: $file)\n    }\n`;\n\nexport default function Dashboard() {\n    const [uploadFile] = useMutation(uploadFileMutation, {\n        refetchQueries: [{query: filesQuery}]\n    });\n\n    const onDrop = useCallback(\n        ([file]) => {\n            uploadFile({variables: {file}});\n        },\n        [uploadFile]\n    );\n\n    const {getRootProps, getInputProps, isDragActive} = useDropzone({onDrop});\n\n    return <div className=\"page\">Dashboard</div>;\n}"]},"metadata":{},"sourceType":"module"}