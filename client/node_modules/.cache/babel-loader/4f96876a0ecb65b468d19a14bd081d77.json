{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/jurizzarechel/Desktop/y4project/y4project-frontend/src/components/pages/Dashboard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport UserContext from \"../../context/UserContext\";\nimport Axios from \"axios\";\nimport Files from \"./Files\";\nexport default function Dashboard() {\n  _s();\n\n  const {\n    userData\n  } = useContext(UserContext);\n  const [userUpload, setUserUpload] = useState('');\n  const [textDetection, setTextDetection] = useState('');\n  const [selOptions] = useState([{\n    label: \"Digital Text in Image\",\n    value: \"digi-text-img\"\n  }, {\n    label: \"Handwriting in Image\",\n    value: \"hndwrtng-img\"\n  }, {\n    label: \"Digital Text in PDF\",\n    value: \"digi-text-pdf\"\n  }]);\n  const [uploads, getUploads] = useState('');\n  const apiUrl = \"http://localhost:4000/files\";\n  const token = localStorage.getItem('auth-token');\n\n  const onFileChange = e => {\n    setUserUpload(e.target.files[0]);\n    console.log(userUpload);\n  };\n\n  const onSelectChange = e => {\n    setTextDetection(e.target.value);\n  };\n\n  const submit = async e => {\n    e.preventDefault();\n    let formData = new FormData();\n    formData.append('textDetection', textDetection);\n    formData.append('file', userUpload);\n    console.log(formData.get('file'));\n    console.log(formData.get('textDetection'));\n\n    try {\n      await Axios({\n        method: 'post',\n        url: `${apiUrl}/new`,\n        data: formData,\n        headers: {\n          'Content-Type': 'multipart/form-data',\n          'x-auth-token': token\n        }\n      }).then(response => {\n        console.log(response);\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  useEffect(() => {\n    const getAllUploads = () => {\n      Axios.get(`${apiUrl}/all`, {\n        headers: {\n          'x-auth-token': token\n        }\n      }).then(response => {\n        const allUploads = response.data;\n        getUploads(allUploads);\n      }).catch(error => console.error(`Error: ${error}`));\n    };\n\n    getAllUploads();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: userData.user ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Upload File\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"form\",\n        encType: \"multipart/form-data\",\n        method: \"POST\",\n        onSubmit: submit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"user-upload\",\n          type: \"file\",\n          onChange: onFileChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"textDetection\",\n          children: \"Text Detection Type\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"textDetection\",\n          id: \"textDetection\",\n          value: textDetection,\n          onChange: onSelectChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 29\n          }, this), selOptions.map(selOption => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: selOption.value,\n            children: selOption.label\n          }, selOption.value, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 33\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Upload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Files, {\n        uploads: uploads\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"You are not logged in.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/login\",\n        children: \"Log In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 17\n    }, this)\n  }, void 0, false);\n}\n\n_s(Dashboard, \"rRfMBaD3i/e/br5/ORZiETdqVNc=\");\n\n_c = Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["/Users/jurizzarechel/Desktop/y4project/y4project-frontend/src/components/pages/Dashboard.js"],"names":["React","useContext","useEffect","useState","Link","UserContext","Axios","Files","Dashboard","userData","userUpload","setUserUpload","textDetection","setTextDetection","selOptions","label","value","uploads","getUploads","apiUrl","token","localStorage","getItem","onFileChange","e","target","files","console","log","onSelectChange","submit","preventDefault","formData","FormData","append","get","method","url","data","headers","then","response","error","getAllUploads","allUploads","catch","user","map","selOption"],"mappings":"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","sourcesContent":["import React, {useContext, useEffect, useState} from \"react\";\nimport {Link} from \"react-router-dom\";\nimport UserContext from \"../../context/UserContext\";\nimport Axios from \"axios\";\nimport Files from \"./Files\";\n\nexport default function Dashboard() {\n    const {userData} = useContext(UserContext);\n    const [userUpload, setUserUpload] = useState('');\n    const [textDetection, setTextDetection] = useState('');\n    const [selOptions] = useState([\n        { label: \"Digital Text in Image\", value: \"digi-text-img\" },\n        { label: \"Handwriting in Image\", value: \"hndwrtng-img\" },\n        { label: \"Digital Text in PDF\", value: \"digi-text-pdf\" }\n    ]);\n    const [uploads, getUploads] = useState('');\n    const apiUrl = \"http://localhost:4000/files\";\n    const token = localStorage.getItem('auth-token');\n\n    const onFileChange = e => {\n        setUserUpload(e.target.files[0]);\n        console.log(userUpload);\n    }\n\n    const onSelectChange = (e) => {\n        setTextDetection(e.target.value);\n    }\n\n    const submit = async (e) => {\n        e.preventDefault();\n\n        let formData = new FormData();\n        formData.append('textDetection', textDetection);\n        formData.append('file', userUpload);\n        console.log(formData.get('file'));\n        console.log(formData.get('textDetection'));\n\n        try {\n            await Axios({\n                method: 'post',\n                url: `${apiUrl}/new`,\n                data: formData,\n                headers: {\n                    'Content-Type': 'multipart/form-data',\n                    'x-auth-token': token\n                }\n            })\n            .then((response) => {\n                console.log(response);\n            });\n        } catch (error) {\n            console.error(error);\n        }\n    }\n\n    useEffect(() => {\n        const getAllUploads = () => {\n            Axios.get(`${apiUrl}/all`, {\n                headers: {\n                    'x-auth-token': token\n                }\n            }).then((response) => {\n                const allUploads = response.data;\n                getUploads(allUploads);\n            }).catch(error => console.error(`Error: ${error}`));\n        };\n\n        getAllUploads();\n    }, []);\n    \n    return (\n        <>\n            {userData.user ? (\n                <div className=\"page\">\n                    <h1>Upload File</h1>\n                    <form \n                        className=\"form\" \n                        encType=\"multipart/form-data\" \n                        method=\"POST\" \n                        onSubmit={submit}\n                    >\n                        <input \n                            name=\"user-upload\" \n                            type=\"file\" \n                            onChange={onFileChange}\n                        />\n\n                        <label htmlFor=\"textDetection\">Text Detection Type</label>\n                        <select \n                            name=\"textDetection\" \n                            id=\"textDetection\"\n                            value={textDetection}\n                            onChange={onSelectChange}\n                        >\n                            <option></option>\n                            {selOptions.map(selOption => (\n                                <option\n                                    key={selOption.value}\n                                    value={selOption.value}\n                                >\n                                    {selOption.label}\n                                </option>\n                            ))}\n                        </select>\n\n                        <input type=\"submit\" value=\"Upload\" />\n                    </form>\n                    <Files uploads={uploads} />\n                </div>\n            ) : (\n                <div className=\"page\">\n                    <h2>You are not logged in.</h2>\n                    <Link to=\"/login\">Log In</Link>\n                </div>\n            )}\n        </>\n    );\n}"]},"metadata":{},"sourceType":"module"}