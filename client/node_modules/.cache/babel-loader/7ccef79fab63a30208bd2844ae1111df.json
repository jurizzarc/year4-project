{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/jurizzarechel/Desktop/y4project/y4project-frontend/src/components/pages/Read.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext, Fragment } from 'react';\nimport axios from 'axios';\nimport UserContext from '../../context/UserContext'; // import NewlineText from '../misc/NewlineText';\n\nexport default function Read(props) {\n  _s();\n\n  const {\n    userData\n  } = useContext(UserContext);\n  const [userUpload, setUserUpload] = useState({});\n  const [detections, setDetections] = useState([]);\n  const apiUrl = 'http://localhost:4000/uploads';\n  useEffect(() => {\n    const userUploadId = props.match.params.userUploadId;\n    const token = localStorage.getItem('auth-token');\n\n    const getFileData = () => {\n      axios.get(`${apiUrl}/read/${userUploadId}`, {\n        headers: {\n          'x-auth-token': token\n        }\n      }).then(response => {\n        setUserUpload(response.data);\n        setDetections(response.data.detections);\n      }).catch(error => console.error(`Error: ${error}`));\n    };\n\n    getFileData();\n  }, []);\n\n  const trim = str => {\n    return str.toString().replace(/^\"(.+(?=\"$))\"$/, '$1');\n  };\n\n  let detectionsArray, extractedText;\n\n  if (detections) {\n    detectionsArray = detections.map(detection => detection.text); // console.log(detectionsArray);\n\n    extractedText = detectionsArray.join('');\n    console.log(extractedText);\n  }\n\n  const SplitParagraph = ({\n    text\n  }) => {\n    const lines = text.split(\"\\n\").map(line => line.trim());\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: lines.map((line, i) => /*#__PURE__*/_jsxDEV(\"p\", {\n        children: line\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 41\n      }, this))\n    }, void 0, false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: userData.user ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page\",\n      children: /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"text\",\n        children: /*#__PURE__*/_jsxDEV(SplitParagraph, {\n          text: extractedText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page\",\n      children: \"Access not allowed.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }, this)\n  }, void 0, false);\n}\n\n_s(Read, \"L1+erZ/30VHjxXkK95RKICoF1b0=\");\n\n_c = Read;\n\nvar _c;\n\n$RefreshReg$(_c, \"Read\");","map":{"version":3,"sources":["/Users/jurizzarechel/Desktop/y4project/y4project-frontend/src/components/pages/Read.js"],"names":["React","useState","useEffect","useContext","Fragment","axios","UserContext","Read","props","userData","userUpload","setUserUpload","detections","setDetections","apiUrl","userUploadId","match","params","token","localStorage","getItem","getFileData","get","headers","then","response","data","catch","error","console","trim","str","toString","replace","detectionsArray","extractedText","map","detection","text","join","log","SplitParagraph","lines","split","line","i","user"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,EAAiDC,QAAjD,QAAiE,OAAjE;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,2BAAxB,C,CACA;;AAEA,eAAe,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAAA;;AAChC,QAAM;AAAEC,IAAAA;AAAF,MAAeN,UAAU,CAACG,WAAD,CAA/B;AACA,QAAM,CAAEI,UAAF,EAAcC,aAAd,IAAgCV,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAAEW,UAAF,EAAcC,aAAd,IAAgCZ,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAMa,MAAM,GAAG,+BAAf;AAEAZ,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMa,YAAY,GAAGP,KAAK,CAACQ,KAAN,CAAYC,MAAZ,CAAmBF,YAAxC;AACA,UAAMG,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAd;;AAEA,UAAMC,WAAW,GAAG,MAAM;AACtBhB,MAAAA,KAAK,CAACiB,GAAN,CAAW,GAAER,MAAO,SAAQC,YAAa,EAAzC,EAA4C;AACxCQ,QAAAA,OAAO,EAAE;AACL,0BAAgBL;AADX;AAD+B,OAA5C,EAIGM,IAJH,CAISC,QAAD,IAAc;AAClBd,QAAAA,aAAa,CAACc,QAAQ,CAACC,IAAV,CAAb;AACAb,QAAAA,aAAa,CAACY,QAAQ,CAACC,IAAT,CAAcd,UAAf,CAAb;AACH,OAPD,EAOGe,KAPH,CAOSC,KAAK,IAAIC,OAAO,CAACD,KAAR,CAAe,UAASA,KAAM,EAA9B,CAPlB;AAQH,KATD;;AAWAP,IAAAA,WAAW;AACd,GAhBQ,EAgBN,EAhBM,CAAT;;AAkBA,QAAMS,IAAI,GAAIC,GAAD,IAAS;AAClB,WAAOA,GAAG,CAACC,QAAJ,GACIC,OADJ,CACY,gBADZ,EAC8B,IAD9B,CAAP;AAEH,GAHD;;AAKA,MAAIC,eAAJ,EAAqBC,aAArB;;AACA,MAAIvB,UAAJ,EAAgB;AACZsB,IAAAA,eAAe,GAAGtB,UAAU,CAACwB,GAAX,CAAeC,SAAS,IAAIA,SAAS,CAACC,IAAtC,CAAlB,CADY,CAEZ;;AACAH,IAAAA,aAAa,GAAGD,eAAe,CAACK,IAAhB,CAAqB,EAArB,CAAhB;AACAV,IAAAA,OAAO,CAACW,GAAR,CAAYL,aAAZ;AACH;;AAED,QAAMM,cAAc,GAAG,CAAC;AAACH,IAAAA;AAAD,GAAD,KAAY;AAC/B,UAAMI,KAAK,GAAGJ,IAAI,CAACK,KAAL,CAAW,IAAX,EAAiBP,GAAjB,CAAqBQ,IAAI,IAAIA,IAAI,CAACd,IAAL,EAA7B,CAAd;AACA,wBACI;AAAA,gBACKY,KAAK,CAACN,GAAN,CAAU,CAACQ,IAAD,EAAOC,CAAP,kBAAa;AAAA,kBAAYD;AAAZ,SAAQC,CAAR;AAAA;AAAA;AAAA;AAAA,cAAvB;AADL,qBADJ;AAKH,GAPD;;AASA,sBACI;AAAA,cACKpC,QAAQ,CAACqC,IAAT,gBACG;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,6BACI;AAAS,QAAA,SAAS,EAAC,MAAnB;AAAA,+BACI,QAAC,cAAD;AAAgB,UAAA,IAAI,EAAEX;AAAtB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADH,gBAOG;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AARR,mBADJ;AAeH;;GA7DuB5B,I;;KAAAA,I","sourcesContent":["import React, { useState, useEffect, useContext, Fragment } from 'react';\nimport axios from 'axios';\nimport UserContext from '../../context/UserContext';\n// import NewlineText from '../misc/NewlineText';\n\nexport default function Read(props) {\n    const { userData } = useContext(UserContext);\n    const [ userUpload, setUserUpload ] = useState({});\n    const [ detections, setDetections ] = useState([]);\n    const apiUrl = 'http://localhost:4000/uploads';\n\n    useEffect(() => {\n        const userUploadId = props.match.params.userUploadId;\n        const token = localStorage.getItem('auth-token');\n\n        const getFileData = () => {\n            axios.get(`${apiUrl}/read/${userUploadId}`, {\n                headers: {\n                    'x-auth-token': token\n                }\n            }).then((response) => {\n                setUserUpload(response.data);\n                setDetections(response.data.detections);\n            }).catch(error => console.error(`Error: ${error}`));\n        };\n\n        getFileData();\n    }, []);\n\n    const trim = (str) => {\n        return str.toString()\n                  .replace(/^\"(.+(?=\"$))\"$/, '$1')\n    };\n\n    let detectionsArray, extractedText;\n    if (detections) {\n        detectionsArray = detections.map(detection => detection.text);\n        // console.log(detectionsArray);\n        extractedText = detectionsArray.join('');\n        console.log(extractedText);\n    }\n\n    const SplitParagraph = ({text}) => {\n        const lines = text.split(\"\\n\").map(line => line.trim());\n        return (\n            <>\n                {lines.map((line, i) => <p key={i}>{line}</p>)}\n            </>\n        );\n    };\n\n    return (\n        <>\n            {userData.user ? (\n                <div className=\"page\">\n                    <section className=\"text\">\n                        <SplitParagraph text={extractedText} />\n                    </section>\n                </div>\n            ) : (\n                <div className=\"page\">\n                    Access not allowed.\n                </div>\n            )}\n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}