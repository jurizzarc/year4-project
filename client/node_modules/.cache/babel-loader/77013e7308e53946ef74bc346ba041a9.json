{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/jurizzarechel/Desktop/y4project/y4project-frontend/src/components/pages/Read.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport axios from 'axios';\nimport UserContext from '../../context/UserContext';\nexport default function Read(props) {\n  _s();\n\n  const {\n    userData\n  } = useContext(UserContext);\n  const [userUpload, setUserUpload] = useState();\n  const [detections, setDetections] = useState();\n  const [extractedText, setExtractedText] = useState();\n  const apiUrl = 'http://localhost:4000/uploads';\n  useEffect(() => {\n    const userUploadId = props.match.params.userUploadId;\n    const token = localStorage.getItem('auth-token');\n\n    const getFileData = () => {\n      axios.get(`${apiUrl}/read/${userUploadId}`, {\n        headers: {\n          'x-auth-token': token\n        }\n      }).then(response => {\n        setUserUpload(response.data);\n        setDetections(response.data.detections);\n      }).catch(error => console.error(`Error: ${error}`));\n    };\n\n    getFileData();\n  }, []);\n\n  if (detections) {}\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: userData.user ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page\",\n      children: /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page\",\n      children: \"Access not allowed.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }, this)\n  }, void 0, false);\n}\n\n_s(Read, \"GxtvpJq75CcVL/QnhSGhWBHVl/o=\");\n\n_c = Read;\n\nvar _c;\n\n$RefreshReg$(_c, \"Read\");","map":{"version":3,"sources":["/Users/jurizzarechel/Desktop/y4project/y4project-frontend/src/components/pages/Read.js"],"names":["React","useState","useEffect","useContext","axios","UserContext","Read","props","userData","userUpload","setUserUpload","detections","setDetections","extractedText","setExtractedText","apiUrl","userUploadId","match","params","token","localStorage","getItem","getFileData","get","headers","then","response","data","catch","error","console","user"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AAEA,eAAe,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAAA;;AAChC,QAAM;AAAEC,IAAAA;AAAF,MAAeL,UAAU,CAACE,WAAD,CAA/B;AACA,QAAM,CAAEI,UAAF,EAAcC,aAAd,IAAgCT,QAAQ,EAA9C;AACA,QAAM,CAAEU,UAAF,EAAcC,aAAd,IAAgCX,QAAQ,EAA9C;AACA,QAAM,CAAEY,aAAF,EAAiBC,gBAAjB,IAAsCb,QAAQ,EAApD;AACA,QAAMc,MAAM,GAAG,+BAAf;AAEAb,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMc,YAAY,GAAGT,KAAK,CAACU,KAAN,CAAYC,MAAZ,CAAmBF,YAAxC;AACA,UAAMG,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAd;;AAEA,UAAMC,WAAW,GAAG,MAAK;AACrBlB,MAAAA,KAAK,CAACmB,GAAN,CAAW,GAAER,MAAO,SAAQC,YAAa,EAAzC,EAA4C;AACxCQ,QAAAA,OAAO,EAAE;AACL,0BAAgBL;AADX;AAD+B,OAA5C,EAIGM,IAJH,CAISC,QAAD,IAAc;AAClBhB,QAAAA,aAAa,CAACgB,QAAQ,CAACC,IAAV,CAAb;AACAf,QAAAA,aAAa,CAACc,QAAQ,CAACC,IAAT,CAAchB,UAAf,CAAb;AACH,OAPD,EAOGiB,KAPH,CAOSC,KAAK,IAAIC,OAAO,CAACD,KAAR,CAAe,UAASA,KAAM,EAA9B,CAPlB;AAQH,KATD;;AAWAP,IAAAA,WAAW;AACd,GAhBQ,EAgBN,EAhBM,CAAT;;AAkBA,MAAIX,UAAJ,EAAgB,CAEf;;AAED,sBACI;AAAA,cACKH,QAAQ,CAACuB,IAAT,gBACG;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,6BACI;AAAS,QAAA,SAAS,EAAC;AAAnB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADH,gBAWG;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAZR,mBADJ;AAmBH;;GAhDuBzB,I;;KAAAA,I","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport axios from 'axios';\nimport UserContext from '../../context/UserContext';\n\nexport default function Read(props) {\n    const { userData } = useContext(UserContext);\n    const [ userUpload, setUserUpload ] = useState();\n    const [ detections, setDetections ] = useState();\n    const [ extractedText, setExtractedText ] = useState();\n    const apiUrl = 'http://localhost:4000/uploads';\n\n    useEffect(() => {\n        const userUploadId = props.match.params.userUploadId;\n        const token = localStorage.getItem('auth-token');\n\n        const getFileData = () =>{\n            axios.get(`${apiUrl}/read/${userUploadId}`, {\n                headers: {\n                    'x-auth-token': token\n                }\n            }).then((response) => {\n                setUserUpload(response.data);\n                setDetections(response.data.detections);\n            }).catch(error => console.error(`Error: ${error}`));\n        };\n\n        getFileData();\n    }, []);\n\n    if (detections) {\n\n    }\n\n    return (\n        <>\n            {userData.user ? (\n                <div className=\"page\">\n                    <section className=\"text\">\n                        {/* {detections.map(detection => (\n                            <p key={detection._id}>\n                                {detection.text.toString().replace(/^\"(.+(?=\"$))\"$/, '$1')}\n                            </p>\n                        ))} */}\n                    </section>\n                </div>\n            ) : (\n                <div className=\"page\">\n                    Access not allowed.\n                </div>\n            )}\n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}