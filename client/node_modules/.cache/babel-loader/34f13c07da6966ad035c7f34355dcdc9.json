{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/jurizzarechel/Desktop/y4project/y4project-frontend/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport { ThemeProvider } from 'styled-components';\nimport { GlobalStyles } from './theme/GlobalStyles';\nimport { useTheme } from './theme/useTheme';\nimport UserContext from './contexts/UserContext';\nimport axios from 'axios';\nimport Home from './components/views/Home';\nexport default function App() {\n  _s();\n\n  const {\n    theme,\n    themeLoaded\n  } = useTheme();\n  const [selectedTheme, setSelectedTheme] = useState(theme);\n  const [userData, setUserData] = useState({\n    token: undefined,\n    user: undefined\n  });\n  useEffect(() => {\n    setSelectedTheme(theme);\n  }, [themeLoaded]);\n  useEffect(() => {\n    const checkLoggedIn = async () => {\n      let token = localStorage.getItem('auth-token');\n\n      if (token === null) {\n        localStorage.setItem('auth-token', '');\n        token = '';\n      }\n\n      const tokenRes = await axios.post('http://localhost:4000/users/tokenIsValid', null, {\n        headers: {\n          'x-auth-token': token\n        }\n      });\n\n      if (tokenRes.data) {\n        const userRes = await axios.get('http://localhost:4000/users/userInfo', {\n          headers: {\n            'x-auth-token': token\n          }\n        });\n        setUserData({\n          token,\n          user: userRes.data\n        });\n      }\n    };\n\n    checkLoggedIn();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(BrowserRouter, {\n      children: /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n        value: {\n          userData,\n          setUserData\n        },\n        children: themeLoaded && /*#__PURE__*/_jsxDEV(ThemeProvider, {\n          theme: selectedTheme,\n          children: [/*#__PURE__*/_jsxDEV(GlobalStyles, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Switch, {\n            children: /*#__PURE__*/_jsxDEV(Route, {\n              exact: true,\n              path: \"/\",\n              component: Home\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 40\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(App, \"J064KcJMmriqy2ehjCmCXLHDwOc=\", false, function () {\n  return [useTheme];\n});\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/jurizzarechel/Desktop/y4project/y4project-frontend/src/App.js"],"names":["React","useState","useEffect","BrowserRouter","Switch","Route","ThemeProvider","GlobalStyles","useTheme","UserContext","axios","Home","App","theme","themeLoaded","selectedTheme","setSelectedTheme","userData","setUserData","token","undefined","user","checkLoggedIn","localStorage","getItem","setItem","tokenRes","post","headers","data","userRes","get"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,aAAT,EAAwBC,MAAxB,EAAgCC,KAAhC,QAA6C,kBAA7C;AACA,SAASC,aAAT,QAA8B,mBAA9B;AACA,SAASC,YAAT,QAA6B,sBAA7B;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,OAAOC,WAAP,MAAwB,wBAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,yBAAjB;AAEA,eAAe,SAASC,GAAT,GAAe;AAAA;;AAC1B,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAyBN,QAAQ,EAAvC;AACA,QAAM,CAACO,aAAD,EAAgBC,gBAAhB,IAAoCf,QAAQ,CAACY,KAAD,CAAlD;AACA,QAAM,CAACI,QAAD,EAAWC,WAAX,IAA0BjB,QAAQ,CAAC;AACrCkB,IAAAA,KAAK,EAAEC,SAD8B;AAErCC,IAAAA,IAAI,EAAED;AAF+B,GAAD,CAAxC;AAKAlB,EAAAA,SAAS,CAAC,MAAM;AACZc,IAAAA,gBAAgB,CAACH,KAAD,CAAhB;AACH,GAFQ,EAEN,CAACC,WAAD,CAFM,CAAT;AAIAZ,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMoB,aAAa,GAAG,YAAY;AAC9B,UAAIH,KAAK,GAAGI,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAZ;;AACA,UAAIL,KAAK,KAAK,IAAd,EAAoB;AAChBI,QAAAA,YAAY,CAACE,OAAb,CAAqB,YAArB,EAAmC,EAAnC;AACAN,QAAAA,KAAK,GAAG,EAAR;AACH;;AAED,YAAMO,QAAQ,GAAG,MAAMhB,KAAK,CAACiB,IAAN,CACnB,0CADmB,EAEnB,IAFmB,EAGnB;AAAEC,QAAAA,OAAO,EAAE;AAAE,0BAAgBT;AAAlB;AAAX,OAHmB,CAAvB;;AAMA,UAAIO,QAAQ,CAACG,IAAb,EAAmB;AACf,cAAMC,OAAO,GAAG,MAAMpB,KAAK,CAACqB,GAAN,CAClB,sCADkB,EAElB;AAAEH,UAAAA,OAAO,EAAE;AAAE,4BAAgBT;AAAlB;AAAX,SAFkB,CAAtB;AAKAD,QAAAA,WAAW,CAAC;AACRC,UAAAA,KADQ;AAERE,UAAAA,IAAI,EAAES,OAAO,CAACD;AAFN,SAAD,CAAX;AAIH;AACJ,KAxBD;;AA0BAP,IAAAA,aAAa;AAChB,GA5BQ,EA4BN,EA5BM,CAAT;AA8BA,sBACI;AAAA,2BACI,QAAC,aAAD;AAAA,6BACI,QAAC,WAAD,CAAa,QAAb;AAAsB,QAAA,KAAK,EAAE;AAACL,UAAAA,QAAD;AAAWC,UAAAA;AAAX,SAA7B;AAAA,kBAEQJ,WAAW,iBAAI,QAAC,aAAD;AAAe,UAAA,KAAK,EAAEC,aAAtB;AAAA,kCACX,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,kBADW,eAEX,QAAC,MAAD;AAAA,mCACI,QAAC,KAAD;AACI,cAAA,KAAK,MADT;AACU,cAAA,IAAI,EAAC,GADf;AAEI,cAAA,SAAS,EAAEJ;AAFf;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAFW;AAAA;AAAA;AAAA;AAAA;AAAA;AAFvB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAmBH;;GA7DuBC,G;UACWJ,Q;;;KADXI,G","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport { ThemeProvider } from 'styled-components';\nimport { GlobalStyles } from './theme/GlobalStyles';\nimport { useTheme } from './theme/useTheme';\nimport UserContext from './contexts/UserContext';\nimport axios from 'axios';\nimport Home from './components/views/Home';\n\nexport default function App() {\n    const { theme, themeLoaded } = useTheme();\n    const [selectedTheme, setSelectedTheme] = useState(theme);\n    const [userData, setUserData] = useState({\n        token: undefined,\n        user: undefined\n    });\n\n    useEffect(() => {\n        setSelectedTheme(theme);\n    }, [themeLoaded]);\n\n    useEffect(() => {\n        const checkLoggedIn = async () => {\n            let token = localStorage.getItem('auth-token');\n            if (token === null) {\n                localStorage.setItem('auth-token', '');\n                token = '';\n            }\n\n            const tokenRes = await axios.post(\n                'http://localhost:4000/users/tokenIsValid', \n                null, \n                { headers: { 'x-auth-token': token } }\n            );\n            \n            if (tokenRes.data) {\n                const userRes = await axios.get(\n                    'http://localhost:4000/users/userInfo',\n                    { headers: { 'x-auth-token': token } }\n                );\n\n                setUserData({\n                    token,\n                    user: userRes.data\n                });\n            }\n        };\n\n        checkLoggedIn();\n    }, []);\n\n    return (\n        <>\n            <BrowserRouter>\n                <UserContext.Provider value={{userData, setUserData}}>\n                    {\n                        themeLoaded && <ThemeProvider theme={selectedTheme}>\n                            <GlobalStyles/>\n                            <Switch>\n                                <Route\n                                    exact path=\"/\"\n                                    component={Home}\n                                />\n                            </Switch>\n                        </ThemeProvider>\n                    }\n                </UserContext.Provider>\n            </BrowserRouter>\n        </>\n    );\n}"]},"metadata":{},"sourceType":"module"}