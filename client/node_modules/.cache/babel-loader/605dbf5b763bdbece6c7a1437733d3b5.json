{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/jurizzarechel/Desktop/y4project/y4project-frontend/src/components/pages/Read.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport axios from 'axios';\nimport UserContext from '../../context/UserContext';\nexport default function Read(props) {\n  _s();\n\n  const {\n    userData\n  } = useContext(UserContext);\n  const [userUpload, setUserUpload] = useState();\n  const apiUrl = 'http://localhost:4000/uploads';\n  const userUploadId = props.match.params.userUploadId;\n  const token = localStorage.getItem('auth-token');\n  useEffect(() => {\n    getFileData();\n  }, []);\n\n  const getFileData = () => {\n    axios.get(`${apiUrl}/read/${userUploadId}`, {\n      headers: {\n        'x-auth-token': token\n      }\n    }).then(response => {\n      //console.log(response.data);\n      setUserUpload(response.data);\n    }).catch(error => console.error(`Error: ${error}`));\n  };\n\n  console.log(userUpload.detections);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: userData.user ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page\",\n      children: /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page\",\n      children: \"Access not allowed.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }, this)\n  }, void 0, false);\n}\n\n_s(Read, \"yqYvx/h1fCoGEpFlqq8MJO03anw=\");\n\n_c = Read;\n\nvar _c;\n\n$RefreshReg$(_c, \"Read\");","map":{"version":3,"sources":["/Users/jurizzarechel/Desktop/y4project/y4project-frontend/src/components/pages/Read.js"],"names":["React","useState","useEffect","useContext","axios","UserContext","Read","props","userData","userUpload","setUserUpload","apiUrl","userUploadId","match","params","token","localStorage","getItem","getFileData","get","headers","then","response","data","catch","error","console","log","detections","user"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AAEA,eAAe,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAAA;;AAChC,QAAM;AAAEC,IAAAA;AAAF,MAAeL,UAAU,CAACE,WAAD,CAA/B;AACA,QAAM,CAAEI,UAAF,EAAcC,aAAd,IAAgCT,QAAQ,EAA9C;AACA,QAAMU,MAAM,GAAG,+BAAf;AACA,QAAMC,YAAY,GAAGL,KAAK,CAACM,KAAN,CAAYC,MAAZ,CAAmBF,YAAxC;AACA,QAAMG,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAd;AAEAf,EAAAA,SAAS,CAAC,MAAM;AACZgB,IAAAA,WAAW;AACd,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMA,WAAW,GAAG,MAAK;AACrBd,IAAAA,KAAK,CAACe,GAAN,CAAW,GAAER,MAAO,SAAQC,YAAa,EAAzC,EAA4C;AACxCQ,MAAAA,OAAO,EAAE;AACL,wBAAgBL;AADX;AAD+B,KAA5C,EAIGM,IAJH,CAISC,QAAD,IAAc;AAClB;AACAZ,MAAAA,aAAa,CAACY,QAAQ,CAACC,IAAV,CAAb;AACH,KAPD,EAOGC,KAPH,CAOSC,KAAK,IAAIC,OAAO,CAACD,KAAR,CAAe,UAASA,KAAM,EAA9B,CAPlB;AAQH,GATD;;AAWAC,EAAAA,OAAO,CAACC,GAAR,CAAYlB,UAAU,CAACmB,UAAvB;AAEA,sBACI;AAAA,cACKpB,QAAQ,CAACqB,IAAT,gBACG;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,6BACI;AAAS,QAAA,SAAS,EAAC;AAAnB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADH,gBAOG;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AARR,mBADJ;AAeH;;GAvCuBvB,I;;KAAAA,I","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport axios from 'axios';\nimport UserContext from '../../context/UserContext';\n\nexport default function Read(props) {\n    const { userData } = useContext(UserContext);\n    const [ userUpload, setUserUpload ] = useState();\n    const apiUrl = 'http://localhost:4000/uploads';\n    const userUploadId = props.match.params.userUploadId;\n    const token = localStorage.getItem('auth-token');\n\n    useEffect(() => {\n        getFileData();\n    }, []);\n\n    const getFileData = () =>{\n        axios.get(`${apiUrl}/read/${userUploadId}`, {\n            headers: {\n                'x-auth-token': token\n            }\n        }).then((response) => {\n            //console.log(response.data);\n            setUserUpload(response.data);\n        }).catch(error => console.error(`Error: ${error}`));\n    };\n\n    console.log(userUpload.detections);\n\n    return (\n        <>\n            {userData.user ? (\n                <div className=\"page\">\n                    <section className=\"text\">\n\n                    </section>\n                </div>\n            ) : (\n                <div className=\"page\">\n                    Access not allowed.\n                </div>\n            )}\n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}