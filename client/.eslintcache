[{"/Users/jurizzarechel/Desktop/y4project/client/src/index.js":"1","/Users/jurizzarechel/Desktop/y4project/client/src/App.js":"2","/Users/jurizzarechel/Desktop/y4project/client/src/utils/storage.js":"3","/Users/jurizzarechel/Desktop/y4project/client/src/contexts/UserContext.js":"4","/Users/jurizzarechel/Desktop/y4project/client/src/hooks/useSignUpForm.js":"5","/Users/jurizzarechel/Desktop/y4project/client/src/validation/validateUserInfo.js":"6","/Users/jurizzarechel/Desktop/y4project/client/src/components/views/home/home.component.js":"7","/Users/jurizzarechel/Desktop/y4project/client/src/components/elements/button/button.component.js":"8","/Users/jurizzarechel/Desktop/y4project/client/src/components/views/authentication/sign-up.component.js":"9","/Users/jurizzarechel/Desktop/y4project/client/src/components/views/authentication/sign-in.component.js":"10","/Users/jurizzarechel/Desktop/y4project/client/src/components/views/user/dashboard/dashboard.component.js":"11","/Users/jurizzarechel/Desktop/y4project/client/src/components/navigation/navbar/navbar.component.js":"12","/Users/jurizzarechel/Desktop/y4project/client/src/components/navigation/side-nav/side-nav.component.js":"13","/Users/jurizzarechel/Desktop/y4project/client/src/components/elements/uploads-list/uploads-list.component.js":"14","/Users/jurizzarechel/Desktop/y4project/client/src/components/elements/modal/modal.component.js":"15","/Users/jurizzarechel/Desktop/y4project/client/src/components/elements/upload-form/upload-form.component.js":"16","/Users/jurizzarechel/Desktop/y4project/client/src/components/views/user/read-text/read-text.component.js":"17","/Users/jurizzarechel/Desktop/y4project/client/src/components/elements/reading-customisation/reading-customisation.component.js":"18","/Users/jurizzarechel/Desktop/y4project/client/src/components/elements/new-line-text.component.js":"19","/Users/jurizzarechel/Desktop/y4project/client/src/styles/global-styles.js":"20","/Users/jurizzarechel/Desktop/y4project/client/src/components/elements/alerts/danger/danger.component.js":"21"},{"size":155,"mtime":1616630308962,"results":"22","hashOfConfig":"23"},{"size":2165,"mtime":1653929169195,"results":"24","hashOfConfig":"23"},{"size":355,"mtime":1614476106752,"results":"25","hashOfConfig":"26"},{"size":74,"mtime":1618073064977,"results":"27","hashOfConfig":"23"},{"size":2669,"mtime":1614906619166,"results":"28","hashOfConfig":"23"},{"size":884,"mtime":1618443431815,"results":"29","hashOfConfig":"23"},{"size":1232,"mtime":1653748114886,"results":"30","hashOfConfig":"23"},{"size":732,"mtime":1653680516290,"results":"31","hashOfConfig":"23"},{"size":5467,"mtime":1653929364149,"results":"32","hashOfConfig":"23"},{"size":2903,"mtime":1653929364204,"results":"33","hashOfConfig":"23"},{"size":1915,"mtime":1653859136755,"results":"34","hashOfConfig":"23"},{"size":1800,"mtime":1653748184956,"results":"35","hashOfConfig":"23"},{"size":2198,"mtime":1653751459547,"results":"36","hashOfConfig":"23"},{"size":2117,"mtime":1653858304921,"results":"37","hashOfConfig":"23"},{"size":2716,"mtime":1653859306916,"results":"38","hashOfConfig":"23"},{"size":5876,"mtime":1653926430446,"results":"39","hashOfConfig":"23"},{"size":1673,"mtime":1653928477444,"results":"40","hashOfConfig":"23"},{"size":12205,"mtime":1653927324897,"results":"41","hashOfConfig":"23"},{"size":1992,"mtime":1620613866691,"results":"42","hashOfConfig":"23"},{"size":251,"mtime":1616630522325,"results":"43","hashOfConfig":"23"},{"size":247,"mtime":1653929414595,"results":"44","hashOfConfig":"23"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},"1o7u3ax",{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"y9j0s6",{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"47"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"47"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"47"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"47"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},"/Users/jurizzarechel/Desktop/y4project/client/src/index.js",[],["93","94"],"/Users/jurizzarechel/Desktop/y4project/client/src/App.js",[],"/Users/jurizzarechel/Desktop/y4project/client/src/utils/storage.js",[],"/Users/jurizzarechel/Desktop/y4project/client/src/contexts/UserContext.js",[],"/Users/jurizzarechel/Desktop/y4project/client/src/hooks/useSignUpForm.js",[],"/Users/jurizzarechel/Desktop/y4project/client/src/validation/validateUserInfo.js",[],"/Users/jurizzarechel/Desktop/y4project/client/src/components/views/home/home.component.js",[],"/Users/jurizzarechel/Desktop/y4project/client/src/components/elements/button/button.component.js",[],"/Users/jurizzarechel/Desktop/y4project/client/src/components/views/authentication/sign-up.component.js",[],"/Users/jurizzarechel/Desktop/y4project/client/src/components/views/authentication/sign-in.component.js",[],"/Users/jurizzarechel/Desktop/y4project/client/src/components/views/user/dashboard/dashboard.component.js",["95"],"import React, { useContext, useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nimport UserContext from \"../../../../contexts/UserContext\";\n\nimport { ReactComponent as Logo } from \"../../../../assets/clear-logo-lg.svg\";\n\nimport SideNav from \"../../../navigation/side-nav/side-nav.component\";\nimport UploadsList from \"../../../elements/uploads-list/uploads-list.component\";\n// import UploadForm from \"../../../elements/UploadForm\";\n\nimport \"./dashboard.styles.css\";\nimport UploadForm from \"../../../elements/upload-form/upload-form.component\";\n\nconst Dashboard = () => {\n  const BASE_API_URL = \"http://localhost:4000/uploads\";\n  // const BASE_API_URL = 'https://clear-server.herokuapp.com/uploads';\n  const [uploads, setUploads] = useState([]);\n  const { userData } = useContext(UserContext);\n  const token = localStorage.getItem(\"auth-token\");\n\n  useEffect(() => {\n    const getAllUploads = () => {\n      axios\n        .get(`${BASE_API_URL}/all`, {\n          headers: {\n            \"x-auth-token\": token,\n          },\n        })\n        .then((response) => {\n          const allUploads = response.data;\n          setUploads(allUploads);\n        })\n        .catch((error) => console.error(`Error: ${error}`));\n    };\n    getAllUploads();\n  }, []);\n\n  return (\n    <>\n      <SideNav />\n      <main className=\"dashboard-container\">\n        <header className=\"dashboard-header\">\n          <Logo />\n          <div className=\"user-info\">\n            <div className=\"user-avatar\"></div>\n            <strong className=\"user-name\">\n              {userData.user && userData.user.displayName}\n            </strong>\n          </div>\n        </header>\n        <section className=\"dashboard-main-content\">\n          <h1 className=\"dashboard-heading\">Library</h1>\n          <UploadsList uploads={uploads && uploads} />\n        </section>\n        <UploadForm />\n      </main>\n    </>\n  );\n};\n\nexport default Dashboard;\n","/Users/jurizzarechel/Desktop/y4project/client/src/components/navigation/navbar/navbar.component.js",["96"],"import React, { useState } from \"react\";\nimport { useHistory, Link } from \"react-router-dom\";\nimport { BiMenu, BiX } from \"react-icons/bi\";\n\nimport { ReactComponent as Logo } from \"../../../assets/clear-logo-lg.svg\";\nimport Button from \"../../elements/button/button.component\";\n\nimport \"./navbar.styles.css\";\n\nconst Navbar = () => {\n  const history = useHistory();\n  const [open, setOpen] = useState(false);\n  const openMenu = () => setOpen(!open);\n  const closeMenu = () => setOpen(false);\n\n  return (\n    <nav className=\"navbar\">\n      <Link to=\"/\" className=\"app-logo\" onClick={() => setOpen(false)}>\n        <Logo />\n      </Link>\n      <button onClick={openMenu} className=\"nav-toggler\">\n        {open ? <BiX className=\"btn-icon\" /> : <BiMenu className=\"btn-icon\" />}\n      </button>\n      <ul className={open ? \"nav-links active\" : \"nav-links\"}>\n        <li className=\"nav-item\">\n          <Link to=\"/about\" className=\"nav-link\" onClick={() => setOpen(false)}>\n            About\n          </Link>\n        </li>\n        <li className=\"nav-item\">\n          <Link to=\"/help\" className=\"nav-link\" onClick={() => setOpen(false)}>\n            Help\n          </Link>\n        </li>\n        <li className=\"nav-item\">\n          <Link\n            to=\"/sign-in\"\n            className=\"nav-link\"\n            onClick={() => setOpen(false)}\n          >\n            Sign In\n          </Link>\n        </li>\n        <li className=\"nav-item\">\n          <Button\n            buttonStyle=\"btn-primary\"\n            buttonSize=\"btn-md\"\n            ariaLabel=\"Click to go to Sign Up\"\n            onClick={() => {\n              setOpen(false);\n              history.push(\"/sign-up\");\n            }}\n          >\n            Sign Up\n          </Button>\n        </li>\n      </ul>\n    </nav>\n  );\n};\n\nexport default Navbar;\n","/Users/jurizzarechel/Desktop/y4project/client/src/components/navigation/side-nav/side-nav.component.js",[],"/Users/jurizzarechel/Desktop/y4project/client/src/components/elements/uploads-list/uploads-list.component.js",[],"/Users/jurizzarechel/Desktop/y4project/client/src/components/elements/modal/modal.component.js",[],["97","98"],"/Users/jurizzarechel/Desktop/y4project/client/src/components/elements/upload-form/upload-form.component.js",[],"/Users/jurizzarechel/Desktop/y4project/client/src/components/views/user/read-text/read-text.component.js",["99"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nimport ReadingCustomisation from \"../../../elements/reading-customisation/reading-customisation.component\";\nimport NewLineText from \"../../../elements/new-line-text.component\";\n\nimport \"./read-text.styles.css\";\n\nconst ReadText = (props) => {\n  const BASE_API_URL = \"http://localhost:4000/uploads\";\n  //   const BASE_API_URL = \"https://clear-server.herokuapp.com/uploads\";\n  const [detectedText, setDetectedText] = useState([]);\n  const [detectionType, setDetectionType] = useState();\n  const [hasHandwritingSystem, setHasHandwritingSystem] = useState();\n\n  useEffect(() => {\n    const userUploadId = props.match.params.userUploadId;\n    const token = localStorage.getItem(\"auth-token\");\n\n    const getFileData = () => {\n      axios\n        .get(`${BASE_API_URL}/read/${userUploadId}`, {\n          headers: {\n            \"x-auth-token\": token,\n          },\n        })\n        .then((response) => {\n          setDetectedText(response.data.detections);\n          setDetectionType(response.data.textDetection);\n          setHasHandwritingSystem(response.data.hasHandwritingSystem);\n        })\n        .catch((error) => console.error(`Error: ${error}`));\n    };\n    getFileData();\n  }, []);\n\n  return (\n    <>\n      <ReadingCustomisation />\n      <main className=\"text-container\">\n        <article>\n          {detectedText && (\n            <NewLineText\n              detections={detectedText}\n              detectionType={detectionType}\n              hasHandwritingSystem={hasHandwritingSystem}\n            />\n          )}\n        </article>\n      </main>\n    </>\n  );\n};\n\nexport default ReadText;\n","/Users/jurizzarechel/Desktop/y4project/client/src/components/elements/reading-customisation/reading-customisation.component.js",["100"],"import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nimport {\n  BiArrowBack,\n  BiPalette,\n  BiFontFamily,\n  BiAlignLeft,\n} from \"react-icons/bi\";\nimport Button from \"../button/button.component\";\nimport Modal from \"../modal/modal.component\";\n\nimport \"./reading-customisation.styles.css\";\n\nconst ReadingCustomisation = () => {\n  const initStyles = {\n    articleBgColor: \"#FAFAFA\",\n    articleTextColor: \"#161616\",\n    maxFontSize: \"20\",\n    articleLineHeight: \"1.5\",\n    articleLetterSpacing: \"0\",\n    articleFontFamily: \"PT Serif\",\n  };\n  const [values, setValues] = useState({\n    articleBgColor: \"\",\n    articleTextColor: \"\",\n    maxFontSize: \"\",\n    articleLineHeight: \"\",\n    articleLetterSpacing: \"\",\n    articleFontFamily: \"\",\n    articleTextAlign: \"\",\n  });\n  const [selectedAlign, setSelectedAlign] = useState(\"left\");\n  const [fontOptions] = useState([\n    { label: \"Alegreya\", value: \"Alegreya\" },\n    { label: \"Andika\", value: \"Andika\" },\n    { label: \"Arial\", value: \"Arial\" },\n    { label: \"Georgia\", value: \"Georgia\" },\n    { label: \"Helvetica\", value: \"Helvetica\" },\n    { label: \"PT Sans\", value: \"PT Sans\" },\n    { label: \"PT Serif\", value: \"PT Serif\" },\n    { label: \"Roboto Slab\", value: \"Roboto Slab\" },\n    { label: \"Tahoma\", value: \"Tahoma\" },\n    { label: \"Times\", value: \"Times\" },\n    { label: \"Verdana\", value: \"Verdana\" },\n  ]);\n  const [isColourModalVisible, setIsColourModalVisible] = useState(false);\n  const [isTextModalVisible, setIsTextModalVisible] = useState(false);\n  const [isLayoutModalVisible, setIsLayoutModalVisible] = useState(false);\n  const history = useHistory();\n  const onBackBtnClick = () => history.push(\"/dashboard\");\n\n  useEffect(() => {\n    setValueFromLocalStorage(\"article-bg-color\");\n    setValueFromLocalStorage(\"article-text-color\");\n    setValueFromLocalStorage(\"max-font-size\");\n    setValueFromLocalStorage(\"article-line-height\");\n    setValueFromLocalStorage(\"article-letter-spacing\");\n    setValueFromLocalStorage(\"article-font-family\");\n    setValueFromLocalStorage(\"article-text-align\");\n  }, []);\n\n  useEffect(() => {\n    const parsedValues = JSON.parse(localStorage.getItem(\"values\"));\n    setValues(parsedValues);\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(\"values\", JSON.stringify(values));\n  }, [values]);\n\n  const setValueFromLocalStorage = (readingProp) => {\n    let value = window.localStorage.getItem(readingProp);\n    document.documentElement.style.setProperty(`--${readingProp}`, value);\n    const input = document.querySelector(`#${readingProp}`);\n    // if (readingProp == 'max-font-size' || readingProp == 'article-letter-spacing') input.value = value.replace('px', '');\n  };\n\n  const handleInputChange = (readingProp, isPixel, e) => {\n    const { name, value } = e.target;\n    setValues({\n      ...values,\n      [name]: value,\n    });\n\n    document.documentElement.style.setProperty(\n      `--${readingProp}`,\n      `${value}${isPixel ? \"px\" : \"\"}`\n    );\n    window.localStorage.setItem(readingProp, `${value}${isPixel ? \"px\" : \"\"}`);\n  };\n\n  const handleRadioChange = (readingProp, isPixel, e) => {\n    const { name, value } = e.target;\n    if (value === \"left\") {\n      setSelectedAlign(\"left\");\n      setValues({ ...values, [name]: value });\n    } else {\n      setSelectedAlign(\"justify\");\n      setValues({ ...values, [name]: value });\n    }\n\n    document.documentElement.style.setProperty(\n      `--${readingProp}`,\n      `${value}${isPixel ? \"px\" : \"\"}`\n    );\n    window.localStorage.setItem(readingProp, `${value}${isPixel ? \"px\" : \"\"}`);\n  };\n\n  return (\n    <>\n      <header className=\"reading-customisation-menu\">\n        <Button\n          buttonStyle=\"btn-ghost\"\n          buttonSize=\"btn-sm\"\n          ariaLabel=\"Click to go back to Dashboard page\"\n          onClick={onBackBtnClick}\n        >\n          <BiArrowBack className=\"btn-icon\" />\n          <span className=\"nav-name\">Back</span>\n        </Button>\n\n        <ul className=\"centre-menu\" role=\"toolbar\">\n          <li>\n            <Button\n              buttonStyle=\"btn-ghost\"\n              buttonSize=\"btn-sm\"\n              ariaLabel=\"Click to change color settings\"\n              onClick={() => setIsColourModalVisible(true)}\n            >\n              <BiPalette className=\"btn-icon\" />\n              <span className=\"nav-name\">Colour</span>\n            </Button>\n          </li>\n          <li>\n            <Button\n              buttonStyle=\"btn-ghost\"\n              buttonSize=\"btn-sm\"\n              ariaLabel=\"Click to change font settings\"\n              onClick={() => setIsTextModalVisible(true)}\n            >\n              <BiFontFamily className=\"btn-icon\" />\n              <span className=\"nav-name\">Text</span>\n            </Button>\n          </li>\n          <li>\n            <Button\n              buttonStyle=\"btn-ghost\"\n              buttonSize=\"btn-sm\"\n              ariaLabel=\"Click to change layout settings\"\n              onClick={() => setIsLayoutModalVisible(true)}\n            >\n              <BiAlignLeft className=\"btn-icon\" />\n              <span className=\"nav-name\">Layout</span>\n            </Button>\n          </li>\n        </ul>\n      </header>\n      {/* Reading Settings Modals */}\n      {isColourModalVisible && (\n        <Modal\n          modalId=\"colour-options-modal\"\n          modalSize=\"modal-sm\"\n          modalPosition=\"modal-topright\"\n          onModalClose={() => setIsColourModalVisible(false)}\n        >\n          <Modal.Header>Colour</Modal.Header>\n          <Modal.Body>\n            <form id=\"colour-options-form\">\n              <div className=\"modal-grid\">\n                <div className=\"settings-form-group\">\n                  <label className=\"settings-label\" htmlFor=\"article-bg-color\">\n                    Background\n                  </label>\n                  <input\n                    type=\"color\"\n                    id=\"article-bg-color\"\n                    name=\"articleBgColor\"\n                    value={\n                      (values && values.articleBgColor) ||\n                      initStyles.articleBgColor\n                    }\n                    onChange={(e) =>\n                      handleInputChange(\"article-bg-color\", false, e)\n                    }\n                  />\n                </div>\n                <div className=\"settings-form-group\">\n                  <label\n                    className=\"settings-label\"\n                    htmlFor=\"article-text-color\"\n                  >\n                    Text\n                  </label>\n                  <input\n                    type=\"color\"\n                    id=\"article-text-color\"\n                    name=\"articleTextColor\"\n                    value={\n                      (values && values.articleTextColor) ||\n                      initStyles.articleTextColor\n                    }\n                    onChange={(e) =>\n                      handleInputChange(\"article-text-color\", false, e)\n                    }\n                  />\n                </div>\n              </div>\n            </form>\n          </Modal.Body>\n        </Modal>\n      )}\n      {isTextModalVisible && (\n        <Modal\n          modalId=\"font-options-modal\"\n          modalSize=\"modal-sm\"\n          modalPosition=\"modal-topright\"\n          onModalClose={() => setIsTextModalVisible(false)}\n        >\n          <Modal.Header>Text</Modal.Header>\n          <Modal.Body>\n            <form id=\"font-options-form\">\n              <div className=\"settings-form-group\">\n                <label className=\"settings-label\" htmlFor=\"article-font-family\">\n                  Font\n                </label>\n                <select\n                  id=\"article-font-family\"\n                  name=\"articleFontFamily\"\n                  value={\n                    (values && values.articleFontFamily) ||\n                    initStyles.articleFontFamily\n                  }\n                  onChange={(e) =>\n                    handleInputChange(\"article-font-family\", false, e)\n                  }\n                >\n                  <option></option>\n                  {fontOptions.map((fontOption) => (\n                    <option key={fontOption.value} value={fontOption.value}>\n                      {fontOption.label}\n                    </option>\n                  ))}\n                </select>\n              </div>\n              <div className=\"settings-form-group\">\n                <label className=\"settings-label\" htmlFor=\"max-font-size\">\n                  Font Size\n                </label>\n                <input\n                  type=\"range\"\n                  id=\"max-font-size\"\n                  name=\"maxFontSize\"\n                  min=\"14\"\n                  max=\"40\"\n                  step=\"1\"\n                  defaultValue={\n                    (values && values.maxFontSize) || initStyles.maxFontSize\n                  }\n                  onChange={(e) => handleInputChange(\"max-font-size\", false, e)}\n                />\n              </div>\n              <div className=\"settings-form-group\">\n                <label className=\"settings-label\" htmlFor=\"article-line-height\">\n                  Line Height\n                </label>\n                <input\n                  type=\"range\"\n                  id=\"article-line-height\"\n                  name=\"articleLineHeight\"\n                  min=\"1.0\"\n                  max=\"3.0\"\n                  step=\"0.1\"\n                  defaultValue={\n                    (values && values.articleLineHeight) ||\n                    initStyles.articleLineHeight\n                  }\n                  onChange={(e) =>\n                    handleInputChange(\"article-line-height\", false, e)\n                  }\n                />\n              </div>\n              <div className=\"settings-form-group\">\n                <label\n                  className=\"settings-label\"\n                  htmlFor=\"article-letter-spacing\"\n                >\n                  Letter Spacing\n                </label>\n                <input\n                  type=\"range\"\n                  id=\"article-letter-spacing\"\n                  name=\"articleLetterSpacing\"\n                  min=\"0\"\n                  max=\"10\"\n                  step=\"1\"\n                  defaultValue={\n                    (values && values.articleLetterSpacing) ||\n                    initStyles.articleLetterSpacing\n                  }\n                  onChange={(e) =>\n                    handleInputChange(\"article-letter-spacing\", true, e)\n                  }\n                />\n              </div>\n            </form>\n          </Modal.Body>\n        </Modal>\n      )}\n      {isLayoutModalVisible && (\n        <Modal\n          modalId=\"layout-options-modal\"\n          modalSize=\"modal-sm\"\n          modalPosition=\"modal-topright\"\n          onModalClose={() => setIsLayoutModalVisible(false)}\n        >\n          <Modal.Header>Layout</Modal.Header>\n          <Modal.Body>\n            <form id=\"layout-options-form\">\n              <div className=\"settings-form-group\">\n                <label className=\"settings-label\" htmlFor=\"article-text-align\">\n                  Alignment\n                </label>\n                <input\n                  type=\"radio\"\n                  value=\"left\"\n                  name=\"articleTextAlign\"\n                  id=\"left\"\n                  onChange={(e) =>\n                    handleRadioChange(\"article-text-align\", false, e)\n                  }\n                  checked={selectedAlign === \"left\"}\n                />\n                <label className=\"radio-label\" htmlFor=\"left\">\n                  Left\n                </label>\n\n                <input\n                  type=\"radio\"\n                  value=\"justify\"\n                  name=\"articleTextAlign\"\n                  id=\"justify\"\n                  onChange={(e) =>\n                    handleRadioChange(\"article-text-align\", false, e)\n                  }\n                  checked={selectedAlign === \"justify\"}\n                />\n                <label className=\"radio-label\" htmlFor=\"justify\">\n                  Justify\n                </label>\n              </div>\n            </form>\n          </Modal.Body>\n        </Modal>\n      )}\n    </>\n  );\n};\n\nexport default ReadingCustomisation;\n","/Users/jurizzarechel/Desktop/y4project/client/src/components/elements/new-line-text.component.js",[],"/Users/jurizzarechel/Desktop/y4project/client/src/styles/global-styles.js",[],"/Users/jurizzarechel/Desktop/y4project/client/src/components/elements/alerts/danger/danger.component.js",[],{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","severity":1,"message":"106","line":37,"column":6,"nodeType":"107","endLine":37,"endColumn":8,"suggestions":"108"},{"ruleId":"109","severity":1,"message":"110","line":14,"column":9,"nodeType":"111","messageId":"112","endLine":14,"endColumn":18},{"ruleId":"101","replacedBy":"113"},{"ruleId":"103","replacedBy":"114"},{"ruleId":"105","severity":1,"message":"115","line":35,"column":6,"nodeType":"107","endLine":35,"endColumn":8,"suggestions":"116"},{"ruleId":"109","severity":1,"message":"117","line":75,"column":11,"nodeType":"111","messageId":"112","endLine":75,"endColumn":16},"no-native-reassign",["118"],"no-negated-in-lhs",["119"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'token'. Either include it or remove the dependency array.","ArrayExpression",["120"],"no-unused-vars","'closeMenu' is assigned a value but never used.","Identifier","unusedVar",["118"],["119"],"React Hook useEffect has a missing dependency: 'props.match.params.userUploadId'. Either include it or remove the dependency array.",["121"],"'input' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"122","fix":"123"},{"desc":"124","fix":"125"},"Update the dependencies array to be: [token]",{"range":"126","text":"127"},"Update the dependencies array to be: [props.match.params.userUploadId]",{"range":"128","text":"129"},[1254,1256],"[token]",[1261,1263],"[props.match.params.userUploadId]"]