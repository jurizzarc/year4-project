[{"/Users/jurizzarechel/Desktop/y4project/client/src/index.js":"1","/Users/jurizzarechel/Desktop/y4project/client/src/App.js":"2","/Users/jurizzarechel/Desktop/y4project/client/src/utils/storage.js":"3","/Users/jurizzarechel/Desktop/y4project/client/src/theme/useTheme.js":"4","/Users/jurizzarechel/Desktop/y4project/client/src/theme/GlobalStyles.js":"5","/Users/jurizzarechel/Desktop/y4project/client/src/contexts/UserContext.js":"6","/Users/jurizzarechel/Desktop/y4project/client/src/components/views/Home.js":"7","/Users/jurizzarechel/Desktop/y4project/client/src/components/views/User/Dashboard.js":"8","/Users/jurizzarechel/Desktop/y4project/client/src/components/navigation/MainNavbar.js":"9","/Users/jurizzarechel/Desktop/y4project/client/src/components/elements/Button.js":"10","/Users/jurizzarechel/Desktop/y4project/client/src/components/views/Authentication/SignUp.js":"11","/Users/jurizzarechel/Desktop/y4project/client/src/hooks/useSignUpForm.js":"12","/Users/jurizzarechel/Desktop/y4project/client/src/validation/validateUserInfo.js":"13","/Users/jurizzarechel/Desktop/y4project/client/src/components/views/Authentication/SignIn.js":"14","/Users/jurizzarechel/Desktop/y4project/client/src/components/elements/alerts/Danger.js":"15","/Users/jurizzarechel/Desktop/y4project/client/src/components/accessibility/AccessibilityMenu.js":"16","/Users/jurizzarechel/Desktop/y4project/client/src/components/elements/Modal.js":"17","/Users/jurizzarechel/Desktop/y4project/client/src/components/elements/UploadsList.js":"18","/Users/jurizzarechel/Desktop/y4project/client/src/components/views/User/Read.js":"19","/Users/jurizzarechel/Desktop/y4project/client/src/components/elements/NewLineText.js":"20","/Users/jurizzarechel/Desktop/y4project/client/src/components/elements/ReadingSettings.js":"21"},{"size":431,"mtime":1616297143484,"results":"22","hashOfConfig":"23"},{"size":3638,"mtime":1616297171423,"results":"24","hashOfConfig":"23"},{"size":355,"mtime":1614476106752,"results":"25","hashOfConfig":"23"},{"size":773,"mtime":1615431918128,"results":"26","hashOfConfig":"23"},{"size":7949,"mtime":1616038516203,"results":"27","hashOfConfig":"23"},{"size":73,"mtime":1609371482591,"results":"28","hashOfConfig":"23"},{"size":362,"mtime":1614539162010,"results":"29","hashOfConfig":"23"},{"size":7202,"mtime":1616366721629,"results":"30","hashOfConfig":"23"},{"size":1391,"mtime":1614569634789,"results":"31","hashOfConfig":"23"},{"size":770,"mtime":1614993619564,"results":"32","hashOfConfig":"23"},{"size":7497,"mtime":1616297123307,"results":"33","hashOfConfig":"23"},{"size":2669,"mtime":1614906619166,"results":"34","hashOfConfig":"23"},{"size":879,"mtime":1614633587367,"results":"35","hashOfConfig":"23"},{"size":3523,"mtime":1616364225927,"results":"36","hashOfConfig":"23"},{"size":322,"mtime":1614973601250,"results":"37","hashOfConfig":"23"},{"size":1370,"mtime":1615434020759,"results":"38","hashOfConfig":"23"},{"size":2753,"mtime":1615416465098,"results":"39","hashOfConfig":"23"},{"size":1353,"mtime":1616390105420,"results":"40","hashOfConfig":"23"},{"size":1794,"mtime":1616386550969,"results":"41","hashOfConfig":"23"},{"size":1991,"mtime":1616386655700,"results":"42","hashOfConfig":"23"},{"size":9624,"mtime":1616442852883,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"y9j0s6",{"filePath":"47","messages":"48","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"46"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"46"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"46"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"46"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"46"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"46"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/jurizzarechel/Desktop/y4project/client/src/index.js",[],["93","94"],"/Users/jurizzarechel/Desktop/y4project/client/src/App.js",["95","96","97"],"import React, { useState, useEffect } from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport { ThemeProvider } from 'styled-components';\nimport { GlobalStyles } from './theme/GlobalStyles';\nimport { useTheme } from './theme/useTheme';\nimport UserContext from './contexts/UserContext';\nimport axios from 'axios';\nimport AccessibilityMenu from './components/accessibility/AccessibilityMenu';\nimport Home from './components/views/Home';\nimport SignUp from './components/views/Authentication/SignUp';\nimport SignIn from './components/views/Authentication/SignIn';\nimport Dashboard from './components/views/User/Dashboard';\nimport Read from './components/views/User/Read';\nimport '../src/theme/index.css';\n\nconst App = () => {\n    const BASE_API_URL = 'http://localhost:4000/users';\n    // const BASE_API_URL = 'https://clear-server.herokuapp.com/users'\n    const { theme, themeLoaded } = useTheme();\n    const [selectedTheme, setSelectedTheme] = useState(theme);\n    const [userData, setUserData] = useState({\n        token: undefined,\n        user: undefined\n    });\n\n    useEffect(() => {\n        setSelectedTheme(theme);\n    }, [themeLoaded]);\n\n    useEffect(() => {\n        const checkLoggedIn = async () => {\n            let token = localStorage.getItem('auth-token');\n            if (token === null) {\n                localStorage.setItem('auth-token', '');\n                token = '';\n            }\n\n            const tokenRes = await axios.post(\n                `${BASE_API_URL}/tokenIsValid`,\n                null, \n                { headers: { 'x-auth-token': token } }\n            );\n            \n            if (tokenRes.data) {\n                const userRes = await axios.get(\n                    `${BASE_API_URL}/userInfo`,\n                    { headers: { 'x-auth-token': token } }\n                );\n\n                setUserData({\n                    token,\n                    user: userRes.data\n                });\n            }\n        };\n\n        checkLoggedIn();\n    }, []);\n\n    return (\n        <>\n            <BrowserRouter>\n                <UserContext.Provider value={{userData, setUserData}}>\n                    {\n                        themeLoaded && <ThemeProvider theme={selectedTheme}>\n                            {/* <GlobalStyles /> */}\n                            <Switch>\n                                <Route\n                                    exact path=\"/\"\n                                    component={Home}\n                                />\n                                <Route \n                                    path=\"/sign-up\" \n                                    component={SignUp} \n                                />\n                                <Route \n                                    path=\"/sign-in\" \n                                    component={SignIn} \n                                />\n                                <Route \n                                    path=\"/dashboard\"\n                                    component={Dashboard}\n                                />\n                                <Route \n                                    exact path=\"/read/:userUploadId\"\n                                    render={(props) => (\n                                        <Read {...props} />\n                                    )}\n                                />\n                            </Switch>\n                            {/* <AccessibilityMenu /> */}\n                        </ThemeProvider>\n                    }\n                </UserContext.Provider>\n            </BrowserRouter>\n        </>\n    );\n}\n\nexport default App;","/Users/jurizzarechel/Desktop/y4project/client/src/utils/storage.js",[],"/Users/jurizzarechel/Desktop/y4project/client/src/theme/useTheme.js",["98","99"],"import { useEffect, useState } from 'react';\nimport { setToLS, getFromLS } from '../utils/storage';\nimport _ from 'lodash';\n// Returns the selected theme from localStorage and a boolean indicating if the theme is loaded correctly\nexport const useTheme = () => {\n    const themes = getFromLS('all-themes');\n    const [theme, setTheme] = useState(themes.data.light);\n    const [themeLoaded, setThemeLoaded] = useState(false);\n    // Applies the theme \n    const setMode = mode => {\n        setToLS('theme', mode);\n        setTheme(mode);\n    };\n    useEffect(() => {\n        const localTheme = getFromLS('theme');\n        localTheme ? setTheme(localTheme) : setTheme(themes.data.light);\n        setThemeLoaded(true);\n    }, []);\n\n    return { theme, themeLoaded, setMode };\n}","/Users/jurizzarechel/Desktop/y4project/client/src/theme/GlobalStyles.js",[],"/Users/jurizzarechel/Desktop/y4project/client/src/contexts/UserContext.js",[],"/Users/jurizzarechel/Desktop/y4project/client/src/components/views/Home.js",[],"/Users/jurizzarechel/Desktop/y4project/client/src/components/views/User/Dashboard.js",["100"],"import React, { useContext, useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport UserContext from '../../../contexts/UserContext';\nimport axios from 'axios';\nimport Button from '../../elements/Button';\nimport UploadsList from '../../elements/UploadsList';\n\nconst Dashboard = () => {\n    const BASE_API_URL = 'http://localhost:4000/uploads';\n    // const BASE_API_URL = 'https://clear-server.herokuapp.com/uploads';\n\n    const { userData, setUserData } = useContext(UserContext);\n    const history = useHistory();\n    const login = () => history.push('/sign-in');\n    const logout = () => {\n        setUserData({\n            token: undefined,\n            user: undefined\n        });\n        localStorage.setItem('auth-token', '');\n        history.push('/');\n    };\n\n    const [userUpload, setUserUpload] = useState('');\n    const [textDetection, setTextDetection] = useState('');\n    const [hasHandwritingSystem, setHasHandwritingSystem] = useState('');\n    const [selOptions] = useState([\n        { label: 'Digital Text in Image', value: 'digi-text-img' },\n        { label: 'Handwriting in Image', value: 'hndwrtng-img' },\n        { label: 'Digital Text in PDF', value: 'digi-text-pdf' }\n    ]);\n    const [uploads, setUploads] = useState('');\n\n    const onFileChange = (e) => {\n        setUserUpload(e.target.files[0]);\n    };\n\n    const onSelectChange = (e) => {\n        setTextDetection(e.target.value);\n    };\n\n    const strToBool = (value) => {\n        if (value === \"true\") return true;\n        if (value === \"false\") return false;\n        return value;\n    };\n\n    const onRadioChange = (e) => {\n        setHasHandwritingSystem(strToBool(e.target.value));\n    };\n\n    const submit = async (e) => {\n        e.preventDefault();\n\n        let formData = new FormData();\n        formData.append('hasHandwritingSystem', hasHandwritingSystem);\n        formData.append('textDetection', textDetection);\n        formData.append('file', userUpload);\n        console.log(formData.get('file'));\n        console.log(formData.get('textDetection'));\n        const token = localStorage.getItem('auth-token');\n\n        try {\n            await axios({\n                method: 'post',\n                url: `${BASE_API_URL}/new`,\n                data: formData,\n                headers: {\n                    'Content-Type': 'multipart/form-data',\n                    'x-auth-token': token\n                }\n            })\n            .then((response) => {\n                console.log(response);\n            });\n        } catch (error) {\n            console.error(error);\n        }\n    }\n\n    useEffect(() => {\n        const token = localStorage.getItem('auth-token');\n        const getAllUploads = () => {\n            axios.get(`${BASE_API_URL}/all`, {\n                headers: {\n                    'x-auth-token': token\n                }\n            }).then((response) => {\n                const allUploads = response.data;\n                setUploads(allUploads);\n            }).catch(error => console.error(`Error: ${error}`));\n        };\n        getAllUploads();\n    }, []);\n\n    return (\n        <>\n            {userData.user ? (\n                <main>\n                    <button onClick={logout}>Sign Out</button>\n\n                    <section className=\"upload-form-container\">\n                        <form\n                            className=\"upload-form\"\n                            encType=\"multipart/form-data\"\n                            method=\"POST\"\n                            onSubmit={submit}\n                        >\n                            <h4>Upload File</h4>\n                            <section className=\"form-fields\">\n                                <div className=\"form-group\">\n                                    <input \n                                        className=\"form-field\"\n                                        type=\"file\"\n                                        id=\"upload-file\"\n                                        name=\"file\"\n                                        aria-required=\"true\"\n                                        onChange={onFileChange}\n                                    />\n                                </div>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"textDetection\">Text Detection Type</label>\n                                    <select\n                                        className=\"form-select\"\n                                        id=\"textDetection\"\n                                        name=\"textDetection\"\n                                        value={textDetection}\n                                        onChange={onSelectChange}\n                                    >\n                                        <option></option>\n                                        {selOptions.map(selOption => (\n                                            <option\n                                                key={selOption.value}\n                                                value={selOption.value}\n                                            >\n                                                {selOption.label}\n                                            </option>\n                                        ))}\n                                    </select>\n                                    {textDetection == 'hndwrtng-img' &&\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"hasHandwritingSystem\">Follows a handwriting system (headings are marked etc)</label>\n                                            <input \n                                                type=\"radio\"\n                                                name=\"hasHandwritingSystem\"\n                                                value=\"true\"\n                                                onChange={onRadioChange}\n                                            />Yes\n                                            <input \n                                                type=\"radio\"\n                                                name=\"hasHandwritingSystem\"\n                                                value=\"false\"\n                                                onChange={onRadioChange}\n                                            />No\n                                        </div>\n                                    }\n                                </div>\n                            </section>\n                            <Button\n                                type=\"submit\"\n                                buttonStyle=\"btn-primary\"\n                                buttonSize=\"btn-md\"\n                            >\n                                Upload\n                            </Button>\n                        </form>\n                    </section>\n\n                    <UploadsList uploads={uploads} />\n                </main>\n            ) : (\n                <main>\n                    You are not logged in.\n                    <button onClick={login}>Sign In</button>\n                </main>\n            )}\n        </>\n    )\n}\n\nexport default Dashboard;","/Users/jurizzarechel/Desktop/y4project/client/src/components/navigation/MainNavbar.js",["101","102","103"],"import React, { useContext } from 'react';\nimport { useHistory, Link } from 'react-router-dom';\nimport UserContext from '../../contexts/UserContext';\nimport styled from 'styled-components';\n\nconst Nav = styled.nav`\n    border-bottom: 1px solid ${ ({ theme }) => theme.colors.border.subtle };\n    padding-bottom: var(--spacing-05);\n`;\n\nconst Brand = styled.h6`\n    display: inline-block;\n`;\n\nconst AuthLinks = styled.ul`\n    float: right;\n    display: block;\n\n    li {\n        display: inline;\n    }\n\n    li:not(:last-child) {\n        margin-right: var(--spacing-05);\n    }\n`;\n\nexport default function MainNavbar() {\n    const { userData, setUserData } = useContext(UserContext);\n    const history = useHistory();\n    const login = () => history.push('/login');\n    const logout = () => {\n        setUserData({\n            token: undefined,\n            user: undefined\n        });\n        localStorage.setItem('auth-token', '');\n        history.push('/');\n    };\n\n    return (\n        <Nav>\n            <Brand>Year 4 Project</Brand>\n            <AuthLinks>\n                <li>\n                    <Link \n                        to=\"/sign-up\"\n                        role=\"button\"\n                        className=\"btn btn-primary btn-md\"\n                    >\n                        Sign Up\n                    </Link>\n                </li>\n            </AuthLinks>\n        </Nav>\n    );\n}","/Users/jurizzarechel/Desktop/y4project/client/src/components/elements/Button.js",[],"/Users/jurizzarechel/Desktop/y4project/client/src/components/views/Authentication/SignUp.js",[],"/Users/jurizzarechel/Desktop/y4project/client/src/hooks/useSignUpForm.js",[],"/Users/jurizzarechel/Desktop/y4project/client/src/validation/validateUserInfo.js",[],"/Users/jurizzarechel/Desktop/y4project/client/src/components/views/Authentication/SignIn.js",[],"/Users/jurizzarechel/Desktop/y4project/client/src/components/elements/alerts/Danger.js",[],"/Users/jurizzarechel/Desktop/y4project/client/src/components/accessibility/AccessibilityMenu.js",[],"/Users/jurizzarechel/Desktop/y4project/client/src/components/elements/Modal.js",[],"/Users/jurizzarechel/Desktop/y4project/client/src/components/elements/UploadsList.js",[],"/Users/jurizzarechel/Desktop/y4project/client/src/components/views/User/Read.js",["104"],"import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport ReadingSettings from '../../elements/ReadingSettings';\nimport NewLineText from '../../elements/NewLineText';\n\nconst Read = (props) => {\n    const BASE_API_URL = 'http://localhost:4000/uploads';\n    // const BASE_API_URL = 'https://clear-server.herokuapp.com/uploads';\n    const [detectedText, setDetectedText] = useState([]);\n    const [detectionType, setDetectionType] = useState();\n    const [hasHandwritingSystem, setHasHandwritingSystem] = useState();\n\n    useEffect(() => {\n        const userUploadId = props.match.params.userUploadId;\n        const token = localStorage.getItem('auth-token');\n\n        const getFileData = () => {\n            axios.get(`${BASE_API_URL}/read/${userUploadId}`, {\n                headers: {\n                    'x-auth-token': token\n                }\n            }).then((response) => {\n                setDetectedText(response.data.detections);\n                setDetectionType(response.data.textDetection);\n                setHasHandwritingSystem(response.data.hasHandwritingSystem);\n            }).catch(error => console.error(`Error: ${error}`));\n        };\n        getFileData();\n    }, []);\n\n    return (\n        <main className=\"reading-container\">\n            <ReadingSettings />\n            <section className=\"article-container\">\n                <article>\n                    {detectedText && \n                        <NewLineText \n                            detections={detectedText} \n                            detectionType={detectionType}\n                            hasHandwritingSystem={hasHandwritingSystem} \n                        />\n                    }\n                </article>\n            </section>\n        </main>\n    )\n}\n\nexport default Read;","/Users/jurizzarechel/Desktop/y4project/client/src/components/elements/NewLineText.js",["105"],"import React from 'react';\nimport { Markup } from 'interweave';\n\nconst NewLineText = (props) => {\n    const detectionType = props.detectionType;\n    const hasHandwritingSystem = props.hasHandwritingSystem;\n    const detections = props.detections;\n    const detectionsArray = detections.map(detection => detection.text);\n    let extractedText = detectionsArray.join('');\n\n    if (hasHandwritingSystem && detectionType == 'hndwrtng-img') {\n        // Pre Clean\n        let cleanText = extractedText;\n        ['[h]', '[s]', '[p]', '[b]', '[i]'].forEach((item, i) => {\n            cleanText = cleanText.split(item).join('\\n' + item.toUpperCase());\n            cleanText = cleanText.split(item.toUpperCase()).join('\\n' + item.toUpperCase());\n        });\n        cleanText = cleanText.split('\\n\\n').join('\\n');\n\n        let lines = cleanText.split('\\n');\n        let resultHtml = '';\n        lines.forEach((line, i) => {\n            let temp = line.substring(3);\n            if (line.toUpperCase().includes('[H]')) {\n                resultHtml = resultHtml + '<h1>' + temp + '</h1>';\n            } else if (line.toUpperCase().includes('[S]')) {\n                resultHtml = resultHtml + '<h2>' + temp + '</h2>';\n            } else if (line.toUpperCase().includes('[P]')) {\n                resultHtml = resultHtml + '<p>' + temp + '</p>';\n            } else if (line.toUpperCase().includes('[B]')) {\n                resultHtml = resultHtml + '<p><strong>' + temp + '</strong></p>';\n            } else if (line.toUpperCase().includes('[I]')) {\n                resultHtml = resultHtml + '<p><em>' + temp + '</em></p>'\n            }\n        });\n        console.log(resultHtml);\n        return <Markup content={resultHtml} />;\n    } else {\n        const newText = extractedText.split('\\n').map((value, index) => {\n            return (\n                <p key={index}>\n                    {value}\n                </p>\n            )\n        });\n        return newText;\n    }\n}\n\nexport default NewLineText;","/Users/jurizzarechel/Desktop/y4project/client/src/components/elements/ReadingSettings.js",[],{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","severity":1,"message":"111","line":4,"column":10,"nodeType":"112","messageId":"113","endLine":4,"endColumn":22},{"ruleId":"110","severity":1,"message":"114","line":8,"column":8,"nodeType":"112","messageId":"113","endLine":8,"endColumn":25},{"ruleId":"115","severity":1,"message":"116","line":28,"column":8,"nodeType":"117","endLine":28,"endColumn":21,"suggestions":"118"},{"ruleId":"110","severity":1,"message":"119","line":3,"column":8,"nodeType":"112","messageId":"113","endLine":3,"endColumn":9},{"ruleId":"115","severity":1,"message":"120","line":18,"column":8,"nodeType":"117","endLine":18,"endColumn":10,"suggestions":"121"},{"ruleId":"122","severity":1,"message":"123","line":140,"column":52,"nodeType":"124","messageId":"125","endLine":140,"endColumn":54},{"ruleId":"110","severity":1,"message":"126","line":29,"column":13,"nodeType":"112","messageId":"113","endLine":29,"endColumn":21},{"ruleId":"110","severity":1,"message":"127","line":31,"column":11,"nodeType":"112","messageId":"113","endLine":31,"endColumn":16},{"ruleId":"110","severity":1,"message":"128","line":32,"column":11,"nodeType":"112","messageId":"113","endLine":32,"endColumn":17},{"ruleId":"115","severity":1,"message":"129","line":29,"column":8,"nodeType":"117","endLine":29,"endColumn":10,"suggestions":"130"},{"ruleId":"122","severity":1,"message":"123","line":11,"column":47,"nodeType":"124","messageId":"125","endLine":11,"endColumn":49},"no-native-reassign",["131"],"no-negated-in-lhs",["132"],"no-unused-vars","'GlobalStyles' is defined but never used.","Identifier","unusedVar","'AccessibilityMenu' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'theme'. Either include it or remove the dependency array.","ArrayExpression",["133"],"'_' is defined but never used.","React Hook useEffect has a missing dependency: 'themes.data.light'. Either include it or remove the dependency array.",["134"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'userData' is assigned a value but never used.","'login' is assigned a value but never used.","'logout' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.match.params.userUploadId'. Either include it or remove the dependency array.",["135"],"no-global-assign","no-unsafe-negation",{"desc":"136","fix":"137"},{"desc":"138","fix":"139"},{"desc":"140","fix":"141"},"Update the dependencies array to be: [theme, themeLoaded]",{"range":"142","text":"143"},"Update the dependencies array to be: [themes.data.light]",{"range":"144","text":"145"},"Update the dependencies array to be: [props.match.params.userUploadId]",{"range":"146","text":"147"},[1158,1171],"[theme, themeLoaded]",[722,724],"[themes.data.light]",[1214,1216],"[props.match.params.userUploadId]"]