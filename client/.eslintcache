[{"/Users/jurizzarechel/Desktop/y4project/client/src/index.js":"1","/Users/jurizzarechel/Desktop/y4project/client/src/App.js":"2","/Users/jurizzarechel/Desktop/y4project/client/src/utils/storage.js":"3","/Users/jurizzarechel/Desktop/y4project/client/src/theme/useTheme.js":"4","/Users/jurizzarechel/Desktop/y4project/client/src/theme/GlobalStyles.js":"5","/Users/jurizzarechel/Desktop/y4project/client/src/contexts/UserContext.js":"6","/Users/jurizzarechel/Desktop/y4project/client/src/components/navigation/MainNavbar.js":"7","/Users/jurizzarechel/Desktop/y4project/client/src/hooks/useSignUpForm.js":"8","/Users/jurizzarechel/Desktop/y4project/client/src/validation/validateUserInfo.js":"9","/Users/jurizzarechel/Desktop/y4project/client/src/components/elements/alerts/Danger.js":"10","/Users/jurizzarechel/Desktop/y4project/client/src/components/accessibility/AccessibilityMenu.js":"11","/Users/jurizzarechel/Desktop/y4project/client/src/components/elements/Modal.js":"12","/Users/jurizzarechel/Desktop/y4project/client/src/components/elements/NewLineText.js":"13","/Users/jurizzarechel/Desktop/y4project/client/src/components/elements/ReadingSettings.js":"14","/Users/jurizzarechel/Desktop/y4project/client/src/components/views/User/Read/Read.js":"15","/Users/jurizzarechel/Desktop/y4project/client/src/components/navigation/SideMenu.js":"16","/Users/jurizzarechel/Desktop/y4project/client/src/components/elements/UploadForm.js":"17","/Users/jurizzarechel/Desktop/y4project/client/src/components/elements/ItemsListGrid.js":"18","/Users/jurizzarechel/Desktop/y4project/client/src/components/navigation/navbar.component.js":"19","/Users/jurizzarechel/Desktop/y4project/client/src/components/views/home/home.component.js":"20","/Users/jurizzarechel/Desktop/y4project/client/src/components/elements/button/button.component.js":"21","/Users/jurizzarechel/Desktop/y4project/client/src/components/views/authentication/sign-up.component.js":"22","/Users/jurizzarechel/Desktop/y4project/client/src/components/views/authentication/sign-in.component.js":"23","/Users/jurizzarechel/Desktop/y4project/client/src/components/views/user/Read/Read.js":"24","/Users/jurizzarechel/Desktop/y4project/client/src/components/views/user/dashboard/dashboard.component.js":"25"},{"size":155,"mtime":1616630308962,"results":"26","hashOfConfig":"27"},{"size":1917,"mtime":1653685168523,"results":"28","hashOfConfig":"27"},{"size":355,"mtime":1614476106752,"results":"29","hashOfConfig":"30"},{"size":773,"mtime":1615431918128,"results":"31","hashOfConfig":"30"},{"size":251,"mtime":1616630522325,"results":"32","hashOfConfig":"27"},{"size":74,"mtime":1618073064977,"results":"33","hashOfConfig":"27"},{"size":1391,"mtime":1614569634789,"results":"34","hashOfConfig":"30"},{"size":2669,"mtime":1614906619166,"results":"35","hashOfConfig":"27"},{"size":884,"mtime":1618443431815,"results":"36","hashOfConfig":"27"},{"size":308,"mtime":1620324015589,"results":"37","hashOfConfig":"27"},{"size":1370,"mtime":1615434020759,"results":"38","hashOfConfig":"30"},{"size":3163,"mtime":1619139086496,"results":"39","hashOfConfig":"27"},{"size":1992,"mtime":1620613866691,"results":"40","hashOfConfig":"27"},{"size":15330,"mtime":1653679929028,"results":"41","hashOfConfig":"27"},{"size":1785,"mtime":1653685112856,"results":"42","hashOfConfig":"27"},{"size":2562,"mtime":1619424430393,"results":"43","hashOfConfig":"27"},{"size":7880,"mtime":1653679929030,"results":"44","hashOfConfig":"27"},{"size":4876,"mtime":1621429368081,"results":"45","hashOfConfig":"27"},{"size":1794,"mtime":1653681752547,"results":"46","hashOfConfig":"27"},{"size":1225,"mtime":1653679929035,"results":"47","hashOfConfig":"27"},{"size":732,"mtime":1653680516290,"results":"48","hashOfConfig":"27"},{"size":5450,"mtime":1653682063415,"results":"49","hashOfConfig":"27"},{"size":2886,"mtime":1653684859596,"results":"50","hashOfConfig":"27"},{"size":1785,"mtime":1653685112856,"results":"51","hashOfConfig":"27"},{"size":1766,"mtime":1653685330479,"results":"52","hashOfConfig":"27"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},"1o7u3ax",{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"y9j0s6",{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"55"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"55"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"55"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"108","messages":"109","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/jurizzarechel/Desktop/y4project/client/src/index.js",[],["110","111"],"/Users/jurizzarechel/Desktop/y4project/client/src/App.js",["112","113"],"/Users/jurizzarechel/Desktop/y4project/client/src/utils/storage.js",[],"/Users/jurizzarechel/Desktop/y4project/client/src/theme/useTheme.js",["114","115"],"/Users/jurizzarechel/Desktop/y4project/client/src/theme/GlobalStyles.js",[],"/Users/jurizzarechel/Desktop/y4project/client/src/contexts/UserContext.js",[],"/Users/jurizzarechel/Desktop/y4project/client/src/components/navigation/MainNavbar.js",["116","117","118"],"import React, { useContext } from 'react';\nimport { useHistory, Link } from 'react-router-dom';\nimport UserContext from '../../contexts/UserContext';\nimport styled from 'styled-components';\n\nconst Nav = styled.nav`\n    border-bottom: 1px solid ${ ({ theme }) => theme.colors.border.subtle };\n    padding-bottom: var(--spacing-05);\n`;\n\nconst Brand = styled.h6`\n    display: inline-block;\n`;\n\nconst AuthLinks = styled.ul`\n    float: right;\n    display: block;\n\n    li {\n        display: inline;\n    }\n\n    li:not(:last-child) {\n        margin-right: var(--spacing-05);\n    }\n`;\n\nexport default function MainNavbar() {\n    const { userData, setUserData } = useContext(UserContext);\n    const history = useHistory();\n    const login = () => history.push('/login');\n    const logout = () => {\n        setUserData({\n            token: undefined,\n            user: undefined\n        });\n        localStorage.setItem('auth-token', '');\n        history.push('/');\n    };\n\n    return (\n        <Nav>\n            <Brand>Year 4 Project</Brand>\n            <AuthLinks>\n                <li>\n                    <Link \n                        to=\"/sign-up\"\n                        role=\"button\"\n                        className=\"btn btn-primary btn-md\"\n                    >\n                        Sign Up\n                    </Link>\n                </li>\n            </AuthLinks>\n        </Nav>\n    );\n}",["119","120"],"/Users/jurizzarechel/Desktop/y4project/client/src/hooks/useSignUpForm.js",[],"/Users/jurizzarechel/Desktop/y4project/client/src/validation/validateUserInfo.js",[],"/Users/jurizzarechel/Desktop/y4project/client/src/components/elements/alerts/Danger.js",[],"/Users/jurizzarechel/Desktop/y4project/client/src/components/accessibility/AccessibilityMenu.js",[],["121","122"],"/Users/jurizzarechel/Desktop/y4project/client/src/components/elements/Modal.js",[],"/Users/jurizzarechel/Desktop/y4project/client/src/components/elements/NewLineText.js",[],"/Users/jurizzarechel/Desktop/y4project/client/src/components/elements/ReadingSettings.js",["123"],"import React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { BiArrowBack, BiPalette, BiFontFamily, BiAlignLeft } from 'react-icons/bi';\nimport Button from '../elements/Button';\nimport Modal from '../elements/Modal';\n\nconst ReadingSettings = () => {\n    const initStyles = {\n        articleBgColor: '#FAFAFA',\n        articleTextColor: '#161616',\n        maxFontSize: '20',\n        articleLineHeight: '1.5',\n        articleLetterSpacing: '0',\n        articleFontFamily: 'PT Serif'\n    };\n    const [values, setValues] = useState({\n        articleBgColor: '',\n        articleTextColor: '',\n        maxFontSize: '',\n        articleLineHeight: '',\n        articleLetterSpacing: '',\n        articleFontFamily: '',\n        articleTextAlign: ''\n    });\n    const [selectedAlign, setSelectedAlign] = useState('left');\n    const [fontOptions] = useState([\n        { label: 'Alegreya', value: 'Alegreya' },\n        { label: 'Andika', value: 'Andika' },\n        { label: 'Arial', value: 'Arial' },\n        { label: 'Georgia', value: 'Georgia' },\n        { label: 'Helvetica', value: 'Helvetica' },\n        { label: 'PT Sans', value: 'PT Sans' },\n        { label: 'PT Serif', value: 'PT Serif' },\n        { label: 'Roboto Slab', value: 'Roboto Slab' },\n        { label: 'Tahoma', value: 'Tahoma' },\n        { label: 'Times', value: 'Times' },\n        { label: 'Verdana', value: 'Verdana' }\n    ]);\n    const [isColourModalVisible, setIsColourModalVisible] = useState(false);\n    const [isTextModalVisible, setIsTextModalVisible] = useState(false);\n    const [isLayoutModalVisible, setIsLayoutModalVisible] = useState(false);\n    const history = useHistory();\n    const onBackBtnClick = () => history.push('/dashboard');\n\n    useEffect(() => {\n        setValueFromLocalStorage('article-bg-color');\n        setValueFromLocalStorage('article-text-color');\n        setValueFromLocalStorage('max-font-size');\n        setValueFromLocalStorage('article-line-height');\n        setValueFromLocalStorage('article-letter-spacing'); \n        setValueFromLocalStorage('article-font-family');\n        setValueFromLocalStorage('article-text-align');\n    }, []);\n\n    useEffect(() => {\n        const parsedValues = JSON.parse(localStorage.getItem('values'));\n        setValues(parsedValues);\n    }, []);\n\n    useEffect(() => {\n        localStorage.setItem('values', JSON.stringify(values));\n    }, [values]);\n\n    const setValueFromLocalStorage = (readingProp) => {\n        let value = window.localStorage.getItem(readingProp);\n        document.documentElement.style.setProperty(\n            `--${readingProp}`,\n            value\n        );\n        const input = document.querySelector(`#${readingProp}`);\n        // if (readingProp == 'max-font-size' || readingProp == 'article-letter-spacing') input.value = value.replace('px', '');\n    };\n\n    const handleInputChange = (readingProp, isPixel, e) => {\n        const { name, value } = e.target;\n        setValues({\n            ...values,\n            [name]: value\n        });\n\n        document.documentElement.style.setProperty(\n            `--${readingProp}`,\n            `${value}${isPixel ? 'px': ''}`\n        );\n        window.localStorage.setItem(\n            readingProp,\n            `${value}${isPixel ? 'px' : ''}`\n        );\n    };\n\n    const handleRadioChange = (readingProp, isPixel, e) => {\n        const { name, value } = e.target;\n        if (value === 'left') {\n            setSelectedAlign('left');\n            setValues({ ...values, [name]: value });\n        } else {\n            setSelectedAlign('justify');\n            setValues({ ...values, [name]: value });\n        }\n\n        document.documentElement.style.setProperty(\n            `--${readingProp}`,\n            `${value}${isPixel ? 'px': ''}`\n        );\n        window.localStorage.setItem(\n            readingProp,\n            `${value}${isPixel ? 'px' : ''}`\n        );\n    };\n\n    return (\n        <>\n            <header\n                className=\"reading-customisation-menu\"\n            >\n                <Button\n                    buttonStyle=\"btn-ghost\"\n                    buttonSize=\"btn-sm\"\n                    ariaLabel=\"Click to go back to Dashboard page\"\n                    onClick={onBackBtnClick}\n                >\n                    <BiArrowBack className=\"btn-icon\" />\n                    <span className=\"nav-name\">Back</span>\n                </Button>\n\n                <ul \n                    className=\"centre-menu\"\n                    role=\"toolbar\"\n                >\n                    <li>\n                        <Button\n                            buttonStyle=\"btn-ghost\"\n                            buttonSize=\"btn-sm\"\n                            ariaLabel=\"Click to change color settings\"\n                            onClick={\n                                () => setIsColourModalVisible(true)\n                            }\n                        >\n                            <BiPalette className=\"btn-icon\" />\n                            <span className=\"nav-name\">Colour</span>\n                        </Button>\n                    </li>\n                    <li>\n                        <Button\n                            buttonStyle=\"btn-ghost\"\n                            buttonSize=\"btn-sm\"\n                            ariaLabel=\"Click to change font settings\"\n                            onClick={\n                                () => setIsTextModalVisible(true)\n                            }\n                        >\n                            <BiFontFamily className=\"btn-icon\" />\n                            <span className=\"nav-name\">Text</span>\n                        </Button>\n                    </li>\n                    <li>\n                        <Button\n                            buttonStyle=\"btn-ghost\"\n                            buttonSize=\"btn-sm\"\n                            ariaLabel=\"Click to change layout settings\"\n                            onClick={\n                                () => setIsLayoutModalVisible(true)\n                            }\n                        >\n                            <BiAlignLeft className=\"btn-icon\" />\n                            <span className=\"nav-name\">Layout</span>\n                        </Button>\n                    </li>\n                </ul>\n            </header>\n            {/* Reading Settings Modals */}\n            {isColourModalVisible && (\n                <Modal\n                    modalId=\"colour-options-modal\"\n                    modalSize=\"modal-sm\"\n                    modalPosition=\"modal-topright\"\n                    onModalClose={\n                        () => setIsColourModalVisible(false)\n                    }\n                >\n                    <Modal.Header>Colour</Modal.Header>\n                    <Modal.Body>\n                        <form id=\"colour-options-form\">\n                            <div className=\"modal-grid\">\n                                <div className=\"settings-form-group\">\n                                    <label className=\"settings-label\" htmlFor=\"article-bg-color\">Background</label>\n                                    <input \n                                        type=\"color\"\n                                        id=\"article-bg-color\"\n                                        name=\"articleBgColor\"\n                                        value={(values && values.articleBgColor) || initStyles.articleBgColor}\n                                        onChange={\n                                            (e) => handleInputChange('article-bg-color', false, e)\n                                        }\n                                    />\n                                </div>\n                                <div className=\"settings-form-group\">\n                                <label className=\"settings-label\" htmlFor=\"article-text-color\">Text</label>\n                                <input \n                                    type=\"color\"\n                                    id=\"article-text-color\"\n                                    name=\"articleTextColor\"\n                                    value={(values && values.articleTextColor) || initStyles.articleTextColor}\n                                    onChange={\n                                        (e) => handleInputChange('article-text-color', false, e)\n                                    }\n                                />\n                                </div>\n                            </div>\n                        </form>\n                    </Modal.Body>\n                </Modal>\n            )}\n            {isTextModalVisible && (\n                <Modal\n                    modalId=\"font-options-modal\"\n                    modalSize=\"modal-sm\"\n                    modalPosition=\"modal-topright\"\n                    onModalClose={\n                        () => setIsTextModalVisible(false)\n                    }\n                >\n                    <Modal.Header>Text</Modal.Header>\n                    <Modal.Body>\n                        <form id=\"font-options-form\">\n                            <div className=\"settings-form-group\">\n                                <label className=\"settings-label\" htmlFor=\"article-font-family\">Font</label>\n                                <select\n                                    id=\"article-font-family\"\n                                    name=\"articleFontFamily\"\n                                    value={(values && values.articleFontFamily) || initStyles.articleFontFamily}\n                                    onChange={\n                                        (e) => handleInputChange('article-font-family', false, e)\n                                    }\n                                >\n                                    <option></option>\n                                    {fontOptions.map(fontOption => (\n                                        <option\n                                            key={fontOption.value}\n                                            value={fontOption.value}\n                                        >\n                                            {fontOption.label}\n                                        </option>\n                                    ))}\n                                </select>\n                            </div>\n                            <div className=\"settings-form-group\">\n                                <label className=\"settings-label\" htmlFor=\"max-font-size\">Font Size</label>\n                                <input \n                                    type=\"range\"\n                                    id=\"max-font-size\"\n                                    name=\"maxFontSize\"\n                                    min=\"14\"\n                                    max=\"40\"\n                                    step=\"1\"\n                                    defaultValue={(values && values.maxFontSize) || initStyles.maxFontSize}\n                                    onChange={\n                                        (e) => handleInputChange('max-font-size', false, e)\n                                    }\n                                />\n                            </div>\n                            <div className=\"settings-form-group\">\n                                <label className=\"settings-label\" htmlFor=\"article-line-height\">Line Height</label>\n                                <input \n                                    type=\"range\"\n                                    id=\"article-line-height\"\n                                    name=\"articleLineHeight\"\n                                    min=\"1.0\"\n                                    max=\"3.0\"\n                                    step=\"0.1\"\n                                    defaultValue={(values && values.articleLineHeight) || initStyles.articleLineHeight}\n                                    onChange={\n                                        (e) => handleInputChange('article-line-height', false, e)\n                                    }\n                                />\n                            </div>\n                            <div className=\"settings-form-group\">\n                                <label className=\"settings-label\" htmlFor=\"article-letter-spacing\">Letter Spacing</label>\n                                <input \n                                    type=\"range\"\n                                    id=\"article-letter-spacing\"\n                                    name=\"articleLetterSpacing\"\n                                    min=\"0\"\n                                    max=\"10\"\n                                    step=\"1\"\n                                    defaultValue={(values && values.articleLetterSpacing) || initStyles.articleLetterSpacing}\n                                    onChange={\n                                        (e) => handleInputChange('article-letter-spacing', true, e)\n                                    }\n                                />\n                            </div>\n                        </form>\n                    </Modal.Body>\n                </Modal>\n            )}\n            {isLayoutModalVisible && (\n                <Modal\n                    modalId=\"layout-options-modal\"\n                    modalSize=\"modal-sm\"\n                    modalPosition=\"modal-topright\"\n                    onModalClose={\n                        () => setIsLayoutModalVisible(false)\n                    }\n                >\n                    <Modal.Header>Layout</Modal.Header>\n                    <Modal.Body>\n                        <form id=\"layout-options-form\">\n                            <div className=\"settings-form-group\">\n                                <label className=\"settings-label\" htmlFor=\"article-text-align\">Alignment</label>\n                                    <input \n                                        type=\"radio\"\n                                        value=\"left\"\n                                        name=\"articleTextAlign\"\n                                        id=\"left\"\n                                        onChange={\n                                            (e) => handleRadioChange('article-text-align', false, e)\n                                        }\n                                        checked={selectedAlign === 'left'}\n                                    />\n                                    <label className=\"radio-label\" htmlFor=\"left\">Left</label>\n\n                                    <input \n                                        type=\"radio\"\n                                        value=\"justify\"\n                                        name=\"articleTextAlign\"\n                                        id=\"justify\"\n                                        onChange={\n                                            (e) => handleRadioChange('article-text-align', false, e)\n                                        }\n                                        checked={selectedAlign === 'justify'}\n                                    />\n                                    <label className=\"radio-label\" htmlFor=\"justify\">Justify</label>\n                            </div>\n                        </form>\n                    </Modal.Body>\n                </Modal>\n            )}\n        </>\n    );\n}\n\nexport default ReadingSettings;","/Users/jurizzarechel/Desktop/y4project/client/src/components/views/User/Read/Read.js",["124"],"import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport ReadingSettings from '../../../elements/ReadingSettings';\nimport NewLineText from '../../../elements/NewLineText';\nimport '../Read/article_styles.css';\n\nconst Read = (props) => {\n    // const BASE_API_URL = 'http://localhost:4000/uploads';\n    const BASE_API_URL = 'https://clear-server.herokuapp.com/uploads';\n    const [detectedText, setDetectedText] = useState([]);\n    const [detectionType, setDetectionType] = useState();\n    const [hasHandwritingSystem, setHasHandwritingSystem] = useState();\n\n    useEffect(() => {\n        const userUploadId = props.match.params.userUploadId;\n        const token = localStorage.getItem('auth-token');\n\n        const getFileData = () => {\n            axios.get(`${BASE_API_URL}/read/${userUploadId}`, {\n                headers: {\n                    'x-auth-token': token\n                }\n            }).then((response) => {\n                setDetectedText(response.data.detections);\n                setDetectionType(response.data.textDetection);\n                setHasHandwritingSystem(response.data.hasHandwritingSystem);\n            }).catch(error => console.error(`Error: ${error}`));\n        };\n        getFileData();\n    }, []);\n\n    return (\n        <>\n            <ReadingSettings />\n            <main className=\"reading-container\">\n                <article>\n                    {detectedText && \n                        <NewLineText \n                            detections={detectedText}\n                            detectionType={detectionType}\n                            hasHandwritingSystem={hasHandwritingSystem}\n                        />\n                    }\n                </article>\n            </main>\n        </>\n    )\n}\n\nexport default Read;","/Users/jurizzarechel/Desktop/y4project/client/src/components/navigation/SideMenu.js",[],"/Users/jurizzarechel/Desktop/y4project/client/src/components/elements/UploadForm.js",[],"/Users/jurizzarechel/Desktop/y4project/client/src/components/elements/ItemsListGrid.js",["125","126","127","128"],"import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport Moment from 'react-moment';\n\nconst ItemsListGrid = (props) => {\n    const uploads = props.uploads;\n    const sortedUploads = [...uploads];\n    const [sortedField, setSortedField] = useState('');\n    console.log(sortedField);\n    if (sortedField !== null) {\n        sortedUploads.sort((a, b) => {\n            if (a[sortedField] < b[sortedField]) {\n                return -1;\n            }\n            if (a[sortedField] > b[sortedField]) {\n                return 1;\n            }\n            return 0; \n        });\n    }\n\n    const onSelectChange = (e) => {\n        setSortedField(e.target.value);\n    };\n\n    const splitFileName = (str) => {\n        return str.substring(0, str.indexOf('_'));\n    };\n\n    const splitStr = (_text) => {\n        let text = _text.split('.');\n        let str = text.slice(0, 8).join('.') + '.';\n        return str;\n    };\n\n    const uploadType = (str) => {\n        let type;\n        if (str === 'digi-text-pdf') type = 'PDF';\n        if (str === 'hndwrtng-img') type = 'Paper-based Notes';\n        if (str === 'digi-text-img') type= 'Text in Image';\n        return type;\n    };\n\n    const publicStorageURL = 'https://storage.googleapis.com/clear-reading-app-uploads';\n\n    return (\n        <>\n            {/* <div className=\"filters\">\n                <div className=\"filters-wrapper\">\n                    <div className=\"search-field\">\n                        <input \n                            id=\"searchUploads\"\n                            type=\"text\"\n                            className=\"form-control\"\n                            aria-label=\"Search Uploads\"\n                            placeholder=\"Search by file name\"\n                        />\n                    </div>\n                    <div className=\"sort-select\">\n                        <strong>Sort by</strong>\n                        <select\n                            id=\"sort-field\"\n                            name=\"sortUploads\"\n                            value={sortedField}\n                            onChange={onSelectChange}\n                        >\n                            <option></option>\n                            <option\n                                key=\"fileName\"\n                                value=\"fileName\"\n                            >\n                                File Name\n                            </option>\n                            <option\n                                key=\"createdAt\"\n                                value=\"createdAt\"\n                            >\n                                Date Uploaded\n                            </option>\n                        </select>\n                    </div>\n                </div>\n            </div> */}\n            {uploads.length > 0 ?\n                <ul className=\"grid\">\n                    {uploads.map((upload) => (\n                        <li \n                            className=\"card\"\n                            key={upload._id}\n                        >\n                            <div className=\"card-img\">\n                                <Link to={{ pathname: `/read/${upload._id}` }}>\n                                    {upload.textDetection === 'hndwrtng-img' &&\n                                        <img src={`${publicStorageURL}/${upload.fileName}`} />\n                                    }\n                                    {upload.textDetection === 'digi-text-img' &&\n                                        <img src={`${publicStorageURL}/${upload.fileName}`} />\n                                    }\n                                    {upload.textDetection === 'digi-text-pdf' &&\n                                        <div className=\"pdf-tn\">\n                                            <p>\n                                                {splitStr(upload.detections[0].text)}..\n                                            </p>\n                                        </div>\n                                    }\n                                </Link>\n                            </div>\n                            <div className=\"card-txt\">\n                                <Link to={{ pathname: `/read/${upload._id}` }}>\n                                    <strong>{splitFileName(upload.fileName)}</strong>\n                                </Link>\n                                <Moment \n                                    date={upload.createdAt}\n                                    parse=\"YYYY-MM-DD\"\n                                    format=\"DD/MM/YYYY\"\n                                />\n                            </div>\n                        </li>\n                    ))}\n                </ul>\n            : (\n                <strong>You have not uploaded any files.</strong>\n            )}\n        </>\n    );\n};\n\nexport default ItemsListGrid;","/Users/jurizzarechel/Desktop/y4project/client/src/components/navigation/navbar.component.js",["129"],"/Users/jurizzarechel/Desktop/y4project/client/src/components/views/home/home.component.js",[],"/Users/jurizzarechel/Desktop/y4project/client/src/components/elements/button/button.component.js",[],"/Users/jurizzarechel/Desktop/y4project/client/src/components/views/authentication/sign-up.component.js",[],"/Users/jurizzarechel/Desktop/y4project/client/src/components/views/authentication/sign-in.component.js",[],"/Users/jurizzarechel/Desktop/y4project/client/src/components/views/user/Read/Read.js",["130"],"/Users/jurizzarechel/Desktop/y4project/client/src/components/views/user/dashboard/dashboard.component.js",["131","132"],{"ruleId":"133","replacedBy":"134"},{"ruleId":"135","replacedBy":"136"},{"ruleId":"137","severity":1,"message":"138","line":9,"column":8,"nodeType":"139","messageId":"140","endLine":9,"endColumn":17},{"ruleId":"137","severity":1,"message":"141","line":10,"column":8,"nodeType":"139","messageId":"140","endLine":10,"endColumn":12},{"ruleId":"137","severity":1,"message":"142","line":3,"column":8,"nodeType":"139","messageId":"140","endLine":3,"endColumn":9},{"ruleId":"143","severity":1,"message":"144","line":18,"column":8,"nodeType":"145","endLine":18,"endColumn":10,"suggestions":"146"},{"ruleId":"137","severity":1,"message":"147","line":29,"column":13,"nodeType":"139","messageId":"140","endLine":29,"endColumn":21},{"ruleId":"137","severity":1,"message":"148","line":31,"column":11,"nodeType":"139","messageId":"140","endLine":31,"endColumn":16},{"ruleId":"137","severity":1,"message":"149","line":32,"column":11,"nodeType":"139","messageId":"140","endLine":32,"endColumn":17},{"ruleId":"133","replacedBy":"150"},{"ruleId":"135","replacedBy":"151"},{"ruleId":"133","replacedBy":"152"},{"ruleId":"135","replacedBy":"153"},{"ruleId":"137","severity":1,"message":"154","line":70,"column":15,"nodeType":"139","messageId":"140","endLine":70,"endColumn":20},{"ruleId":"143","severity":1,"message":"155","line":30,"column":8,"nodeType":"145","endLine":30,"endColumn":10,"suggestions":"156"},{"ruleId":"137","severity":1,"message":"157","line":22,"column":11,"nodeType":"139","messageId":"140","endLine":22,"endColumn":25},{"ruleId":"137","severity":1,"message":"158","line":36,"column":11,"nodeType":"139","messageId":"140","endLine":36,"endColumn":21},{"ruleId":"159","severity":1,"message":"160","line":94,"column":41,"nodeType":"161","endLine":94,"endColumn":95},{"ruleId":"159","severity":1,"message":"160","line":97,"column":41,"nodeType":"161","endLine":97,"endColumn":95},{"ruleId":"137","severity":1,"message":"162","line":14,"column":9,"nodeType":"139","messageId":"140","endLine":14,"endColumn":18},{"ruleId":"143","severity":1,"message":"155","line":30,"column":8,"nodeType":"145","endLine":30,"endColumn":10,"suggestions":"163"},{"ruleId":"137","severity":1,"message":"164","line":2,"column":10,"nodeType":"139","messageId":"140","endLine":2,"endColumn":18},{"ruleId":"143","severity":1,"message":"165","line":33,"column":6,"nodeType":"145","endLine":33,"endColumn":8,"suggestions":"166"},"no-native-reassign",["167"],"no-negated-in-lhs",["168"],"no-unused-vars","'Dashboard' is defined but never used.","Identifier","unusedVar","'Read' is defined but never used.","'_' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'themes.data.light'. Either include it or remove the dependency array.","ArrayExpression",["169"],"'userData' is assigned a value but never used.","'login' is assigned a value but never used.","'logout' is assigned a value but never used.",["167"],["168"],["167"],["168"],"'input' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.match.params.userUploadId'. Either include it or remove the dependency array.",["170"],"'onSelectChange' is assigned a value but never used.","'uploadType' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'closeMenu' is assigned a value but never used.",["171"],"'Redirect' is defined but never used.","React Hook useEffect has a missing dependency: 'token'. Either include it or remove the dependency array.",["172"],"no-global-assign","no-unsafe-negation",{"desc":"173","fix":"174"},{"desc":"175","fix":"176"},{"desc":"175","fix":"177"},{"desc":"178","fix":"179"},"Update the dependencies array to be: [themes.data.light]",{"range":"180","text":"181"},"Update the dependencies array to be: [props.match.params.userUploadId]",{"range":"182","text":"183"},{"range":"184","text":"183"},"Update the dependencies array to be: [token]",{"range":"185","text":"186"},[722,724],"[themes.data.light]",[1257,1259],"[props.match.params.userUploadId]",[1251,1253],[1066,1068],"[token]"]